#  Copyright (C) 2014 Carlos Cardenas <cardenas12@gmail.com>
#
#  SPDX-License-Identifier:     GPL-2.0

# Sample configuration demonstrating many ONIE install options

ddns-update-style none;
option domain-name "ocp-labs.local";
option domain-name-servers 192.168.1.1;

default-lease-time 600;
max-lease-time 7200;

# Create an option namespace called ONIE for VIVSO (option 125)
option space onie code width 1 length width 1;

# Define the code names and data types within the ONIE namespace
option onie.installer_url code 1 = text;
option onie.updater_url   code 2 = text;
option onie.machine       code 3 = text;
option onie.arch          code 4 = text;
option onie.machine_rev   code 5 = text;

# Package the ONIE namespace into option 125
option space vivso code width 4 length width 1;
option vivso.onie code 42623 = encapsulate onie;
option vivso.iana code 0 = string;
option op125 code 125 = encapsulate vivso;

# Optionally add syslog server for logging
# option log-servers 192.168.1.3;

log-facility local7;

# Logging constructs to assist with debugging
log(error, concat("vendor-class: ", substring(option vendor-class-identifier, 0, 11)));
log(error, concat("platform    : ", substring(option vendor-class-identifier, 12, 999)));

# Parses vendor-class-identifier and adjusts the default-url
class "onie-vendor-X-class" {
  match if substring(option vendor-class-identifier, 0, 27) = "onie_vendor:powerpc-VendorX";
  option default-url = "http://onie-server/VendorX-onie-installer";
}

# VIVSO example
class "onie-vendor-classes" {
  # Limit the matching to a request we know originated from ONIE
  match if substring(option vendor-class-identifier, 0, 11) = "onie_vendor";

  # Required to use VIVSO
  option vivso.iana 01:01:01;

  # generic CPU architecture matching
  if option onie.arch = "powerpc" {
    option onie.installer_url = "http://onie-server/generic-powerpc-onie-installer";
  }

  # matching on CPU architecture and machine type
  if option onie.arch = "powerpc" and option onie.machine = "XYZ1234" {
    option onie.installer_url = "http://onie-server/powerpc-xyz1234-onie-installer";
  }

  # The contents of an option can also be used to create the response text
  if exists onie.arch and exists onie.machine and exists onie.machine_rev {
    option onie.installer_url = concat("http://onie-server/image-installer-",
                                     option onie.arch, "-", option onie.machine,
                                     "-r", option onie.machine_rev);
  }

  # When operating in ONIE 'update' mode ONIE will check the
  # onie.updater_url response option
  if option onie.arch = "powerpc" and option onie.machine = "XYZ1234" {
    option onie.updater_url = "http://onie-server/onie-updater-VENDOR_XYZ1234-powerpc.bin";
  }

}

# Uses the default-url option for ONIE
subnet 192.168.1.0 netmask 255.255.255.0 {
    range 192.168.1.150 192.168.1.240;
    authoritative;
    option routers 192.168.1.1;
    option broadcast-address 192.168.1.255;
    option default-url = "http://192.168.1.2/custom-onie-installer";
    # Below is the same but uses DNS resolution
    # option default-url = "http://onie-server/custom-onie-installer";
}

# Typical tftp waterfall example
# ONIE will also try to use HTTP on the next-server and dhcpd server
subnet 192.168.1.0 netmask 255.255.255.0 {
    range 192.168.1.150 192.168.1.240;
    authoritative;
    option routers 192.168.1.1;
    option broadcast-address 192.168.1.255;
    next-server 192.168.1.1;
}
