Support for Accton AS_28T_OPS

diff --git a/Makefile b/Makefile
index 4017993..38bf9cc 100755
--- a/Makefile
+++ b/Makefile
@@ -316,7 +316,6 @@ LIBS-y += lib/libfdt/libfdt.o
 LIBS-y += api/libapi.o
 LIBS-y += post/libpost.o
 LIBS-y += test/libtest.o
-LIBS-y += drivers/d1w/libds1wm.o
 
 ifneq ($(CONFIG_AM33XX)$(CONFIG_OMAP34XX)$(CONFIG_OMAP44XX)$(CONFIG_OMAP54XX),)
 LIBS-y += $(CPUDIR)/omap-common/libomap-common.o
diff --git a/arch/arm/cpu/armv7/iproc/ddr_init.c b/arch/arm/cpu/armv7/iproc/ddr_init.c
index fc06121..d1e531c 100755
--- a/arch/arm/cpu/armv7/iproc/ddr_init.c
+++ b/arch/arm/cpu/armv7/iproc/ddr_init.c
@@ -1707,8 +1707,8 @@ static int write_shmoo_to_flash(void *buf, int length)
     if (erase) {
         ret = spi_flash_erase(
                 flash, 
-                offset / flash->sector_size * flash->sector_size, 
-                flash->sector_size
+                offset / CONFIG_SHMOO_REUSE_QSPI_SIZE * CONFIG_SHMOO_REUSE_QSPI_SIZE,
+                CONFIG_SHMOO_REUSE_QSPI_SIZE
                 );
         if (ret) {
             printf("SPI flash erase failed, error=%d\n", ret);
diff --git a/arch/arm/cpu/armv7/iproc/iproc_nand.c b/arch/arm/cpu/armv7/iproc/iproc_nand.c
index dc14845..dba3e05 100755
--- a/arch/arm/cpu/armv7/iproc/iproc_nand.c
+++ b/arch/arm/cpu/armv7/iproc/iproc_nand.c
@@ -429,6 +429,8 @@ static int iproc_nand_config (
 		    break;
 		}
 	}
+        /*Simon: Force using ONFI device name*/
+        inand[cs].chip_ptr=0;
 	/* have we identified the chip? */
 	if (!inand[cs].chip_ptr) {
 	    /* 
diff --git a/arch/arm/include/asm/arch-hurricane2/socregs.h b/arch/arm/include/asm/arch-hurricane2/socregs.h
index 340d612..e4a26cd 100644
--- a/arch/arm/include/asm/arch-hurricane2/socregs.h
+++ b/arch/arm/include/asm/arch-hurricane2/socregs.h
@@ -165,6 +165,7 @@
 #define IHOST_PROC_CLK_ARM_SWITCH_CLKGATE					0x19000210
 #define IHOST_PROC_CLK_ARM_PERIPH_CLKGATE					0x19000300
 #define IHOST_PROC_CLK_APB0_CLKGATE							0x19000400
+#define IHOST_PROC_CLK_PLLARMCTRL5                          0x19000c20
 #define IHOST_PROC_CLK_POLICY_CTL__GO						0
 #define IHOST_PROC_CLK_POLICY_CTL__GO_AC					1
 #define IHOST_PROC_CLK_PLLARMA__pllarm_lock					28
diff --git a/board/accton/as_28t_ops/Makefile b/board/accton/as_28t_ops/Makefile
new file mode 100644
index 0000000..98bf898
--- /dev/null
+++ b/board/accton/as_28t_ops/Makefile
@@ -0,0 +1,28 @@
+include $(TOPDIR)/config.mk
+
+LIB = $(obj)lib$(BOARD).o
+
+COBJS	:= $(BOARD).o ddr_init_table.o
+
+SRCS	:= $(SOBJS:.o=.S) $(COBJS:.o=.c)
+OBJS	:= $(addprefix $(obj),$(COBJS))
+SOBJS	:= $(addprefix $(obj),$(SOBJS))
+
+$(LIB): $(obj).depend $(OBJS) $(SOBJS)
+	$(call cmd_link_o_target, $(OBJS), $(SOBJS))
+
+clean:
+	rm -f $(SOBJS) $(OBJS)
+
+distclean:	clean
+	rm -f $(LIB) core *.bak .depend
+
+#########################################################################
+
+# defines $(obj).depend target
+include $(SRCTREE)/rules.mk
+#include /home/lab/uboot_from_denx_tot/uboot/rules.mk
+
+sinclude $(obj).depend
+
+#########################################################################
diff --git a/board/accton/as_28t_ops/as_28t_ops.c b/board/accton/as_28t_ops/as_28t_ops.c
new file mode 100644
index 0000000..3625210
--- /dev/null
+++ b/board/accton/as_28t_ops/as_28t_ops.c
@@ -0,0 +1,205 @@
+/*
+ * Copyright (C) 2013, Broadcom Corporation. All Rights Reserved.
+ *
+ * Permission to use, copy, modify, and/or distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
+ * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
+ * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
+ * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+#include <common.h>
+#include <asm/io.h>
+#include <asm/mach-types.h>
+#include <config.h>
+#include <asm/arch/iproc.h>
+#include <asm/system.h>
+#include "asm/iproc/iproc_common.h"
+#include <asm/arch/iproc_regs.h>
+#include "asm/arch/socregs.h"
+#include "asm/arch/reg_utils.h"
+
+DECLARE_GLOBAL_DATA_PTR;
+
+extern int bcmiproc_eth_register(u8 dev_num);
+extern void iproc_save_shmoo_values(void);
+
+void init_timeouts(void) {
+
+#define DDR_IDM_ERROR_LOG_CONTROL_VAL                       0x33a //0x330
+
+#define W_REG(o, a, v) *a=(unsigned int)v
+#define uint32 unsigned int
+
+    W_REG(osh, (uint32 *)IHOST_S0_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+    W_REG(osh, (uint32 *)IHOST_S1_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+
+    W_REG(osh, (uint32 *)DDR_S1_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+    W_REG(osh, (uint32 *)DDR_S2_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+
+	W_REG(osh, (uint32 *)AXI_PCIE_S0_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+
+	W_REG(osh, (uint32 *)CMICD_S0_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)APBY_S0_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)ROM_S0_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)NAND_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)QSPI_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)A9JTAG_S0_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)SRAM_S0_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)APBZ_S0_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)AXIIC_DS_3_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)APBW_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)APBX_IDM_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+	W_REG(osh, (uint32 *)AXIIC_DS_0_IDM_ERROR_LOG_CONTROL, DDR_IDM_ERROR_LOG_CONTROL_VAL);
+
+}
+
+void init_axitrace(void)
+{
+
+	reg32_write((volatile uint32_t *)IHOST_AXITRACE_M1_ATM_CONFIG, 0x5551);
+	reg32_write((volatile uint32_t *)IHOST_AXITRACE_M1_ATM_CMD, 2);
+	reg32_write((volatile uint32_t *)IHOST_AXITRACE_M0_ATM_CONFIG, 0x5551);
+	reg32_write((volatile uint32_t *)IHOST_AXITRACE_M0_ATM_CMD, 2);
+	reg32_write((volatile uint32_t *)IHOST_AXITRACE_ACP_ATM_CONFIG, 0x5551);
+	reg32_write((volatile uint32_t *)IHOST_AXITRACE_ACP_ATM_CMD, 2);
+}
+/*****************************************
+ * board_init -early hardware init
+ *****************************************/
+int board_init (void)
+{
+    gd->bd->bi_arch_number = CONFIG_MACH_TYPE;      /* board id for linux */
+    gd->bd->bi_boot_params = LINUX_BOOT_PARAM_ADDR; /* adress of boot parameters */
+
+    return 0;
+}
+
+#if defined(CONFIG_OF_BOARD_SETUP)
+void
+ft_board_setup(void *blob, bd_t *bd)
+{
+        /* FIXME */
+}
+#endif
+
+/*****************************************************************
+ * misc_init_r - miscellaneous platform dependent initializations
+ ******************************************************************/
+int misc_init_r (void)
+{
+    return(0);
+}
+
+/**********************************************
+ * dram_init - sets uboots idea of sdram size
+ **********************************************/
+int dram_init (void)
+{
+	uint32_t sku_id;
+#ifndef CONFIG_HURRICANE2_EMULATION
+	bench_screen_test1();
+
+	ddr_init2();
+#endif
+	sku_id = (reg32_read((volatile uint32_t *)CMIC_DEV_REV_ID)) & 0x0000ffff;
+	if(sku_id == 0xb151  || sku_id == 0x8394) {
+		/* DeerHound SVK */
+		gd->ram_size = DEERHOUND_SVK_SDRAM_SIZE - CONFIG_PHYS_SDRAM_RSVD_SIZE;
+	}
+	else {
+		gd->ram_size = CONFIG_PHYS_SDRAM_1_SIZE - CONFIG_PHYS_SDRAM_RSVD_SIZE;
+	}
+
+    return 0;
+}
+
+int board_early_init_f (void)
+{
+	int status = 0;
+	uint32_t sku_id, val;
+
+#ifdef CONFIG_HURRICANE2_EMULATION
+		/* Set the UART clock to APB clock so we get baudrate 115200. 50000000/16/27 =  115740 */
+		val = reg32_read((volatile uint32_t *)ChipcommonA_CoreCtrl);
+		val &= 0xFFFFFFF7;
+		reg32_write((volatile uint32_t *)ChipcommonA_CoreCtrl, val); /* Disable UART clock */
+		val |= 0x9;
+		reg32_write((volatile uint32_t *)ChipcommonA_CoreCtrl, val); /* Enable and set it to APB clock(bit 0) */
+#else
+
+	sku_id = (reg32_read((volatile uint32_t *)CMIC_DEV_REV_ID)) & 0x0000ffff;
+	if(sku_id == 0x8344) {
+		/* Configure ARM PLL to 400MHz */
+		iproc_config_armpll(400);
+
+		status = iproc_config_genpll(4); /* Wolfhound - BCM53344, change AXI clock to 200MHz */
+		/* APB clock is axiclk/4,i.e 50MHz */
+		/* Set the UART clock to APB clock so we get baudrate 115200. 50000000/16/27 =  115740 */
+		val = reg32_read((volatile uint32_t *)ChipcommonA_CoreCtrl);
+		val &= 0xFFFFFFF7;
+		reg32_write((volatile uint32_t *)ChipcommonA_CoreCtrl, val); /* Disable UART clock */
+		val |= 0x9;
+		reg32_write((volatile uint32_t *)ChipcommonA_CoreCtrl, val); /* Enable and set it to APB clock(bit 0) */
+	}
+	else {
+		/* default SKU = b150, ARM Clock is 1GHz, AXI clock is 400MHz, APB clock is 100MHz */
+		/* Set UART clock to APB clock/2 i.e 50MHz to get baudrate 115200*/
+		/* Configure ARM PLL to 1GHz */
+		iproc_config_armpll(1000);
+
+		//status = iproc_config_genpll(3); /* 0: 400, 2: 285, 3: 250, 4: 200, 5: 100 */
+		val = reg32_read((volatile uint32_t *)ChipcommonA_ClkDiv);
+		val &= 0xFFFFFF00;
+		val |= 0x2;
+		reg32_write((volatile uint32_t *)ChipcommonA_ClkDiv, val); /* set UART clk = APB clk/2 */
+	}
+#endif
+	return(status);
+}
+int board_late_init (void)
+{
+	extern ulong mmu_table_addr;    /* MMU on flash fix: 16KB aligned */
+	int status = 0;
+
+	printf("Unlocking L2 Cache ...");
+	l2cc_unlock();
+	printf("Done\n");
+
+	/* MMU on flash fix: 16KB aligned */
+	asm volatile ("mcr p15, 0, %0, c2, c0, 0"::"r"(mmu_table_addr)); /*update TTBR0 */
+	asm volatile ("mcr p15, 0, r1, c8, c7, 0");  /*invalidate TLB*/
+	asm volatile ("mcr p15, 0, r1, c7, c10, 4"); /* DSB */
+	asm volatile ("mcr p15, 0, r0, c7, c5, 4"); /* ISB */
+
+	iproc_clk_enum();
+
+	disable_interrupts();
+#ifndef CONFIG_HURRICANE2_EMULATION
+	init_timeouts();
+	init_axitrace();
+#endif
+
+#if defined(CONFIG_RUN_DDR_SHMOO2) && defined(CONFIG_SHMOO_REUSE)
+	/* Save DDR PHY parameters into flash if Shmoo was performed */
+	iproc_save_shmoo_values();
+#endif
+	return status;
+}
+
+int board_eth_init(bd_t *bis)
+{
+	int rc = -1;
+#ifdef CONFIG_BCMIPROC_ETH
+#ifndef CONFIG_HURRICANE2_EMULATION
+	printf("Registering eth\n");
+	rc = bcmiproc_eth_register(0);
+#endif
+#endif
+	return rc;
+}
diff --git a/board/accton/as_28t_ops/config.mk b/board/accton/as_28t_ops/config.mk
new file mode 100644
index 0000000..5b71c21
--- /dev/null
+++ b/board/accton/as_28t_ops/config.mk
@@ -0,0 +1,19 @@
+ifdef CONFIG_NAND_IPROC_BOOT
+CONFIG_SYS_TEXT_BASE = 0x28000000
+else
+ifdef CONFIG_NOR_IPROC_BOOT
+CONFIG_SYS_TEXT_BASE = 0x20000000
+else
+CONFIG_SYS_TEXT_BASE = 0x1C000000
+endif
+endif
+
+
+ifdef CONFIG_NO_CODE_RELOC
+LDSCRIPT := $(SRCTREE)/board/$(BOARDDIR)/u-boot-nr.lds
+endif
+
+ifdef CONFIG_CUSTOM_LINKER_SCRIPT
+LDSCRIPT := $(SRCTREE)/board/$(BOARDDIR)/u-boot-custom.lds
+endif
+#PLATFORM_RELFLAGS += -DSVN_REVISION=' " $(SVN_REV)"'
diff --git a/board/accton/as_28t_ops/ddr_init_table.c b/board/accton/as_28t_ops/ddr_init_table.c
new file mode 100644
index 0000000..077d708
--- /dev/null
+++ b/board/accton/as_28t_ops/ddr_init_table.c
@@ -0,0 +1,1529 @@
+/*
+ * Copyright (C) 2013, Broadcom Corporation. All Rights Reserved.
+ *
+ * Permission to use, copy, modify, and/or distribute this software for any
+ * purpose with or without fee is hereby granted, provided that the above
+ * copyright notice and this permission notice appear in all copies.
+ *
+ * THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
+ * WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
+ * MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY
+ * SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
+ * WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION
+ * OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF OR IN
+ * CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
+ */
+
+unsigned int ddr_init_tab[] = {
+	14, 0x00000001,
+	36, 0x01000000,
+	37, 0x10000000,
+	38, 0x00100400,
+	39, 0x00000400,
+	40, 0x00000100,
+	42, 0x00000001,
+	61, 0x00010100,
+	78, 0x01000200,
+	79, 0x02000040,
+	80, 0x00400100,
+	81, 0x00000200,
+	83, 0x01ffff0a,
+	84, 0x01010101,
+	85, 0x01010101,
+	86, 0x0f000003,
+	87, 0x0000010c,
+	88, 0x00010000,
+	112, 0x00000200,
+	116, 0x0d000000,
+	117, 0x00000028,
+	119, 0x00010001,
+	120, 0x00010001,
+	121, 0x00010001,
+	122, 0x00010001,
+	123, 0x00010001,
+	130, 0x00000001,
+	139, 0x00000001,
+	148, 0x00000001,
+	149, 0x00000000,
+	150, 0x00000000,
+	152, 0x03030303,
+	153, 0x03030303,
+	156, 0x02006400,
+	157, 0x02020202,
+	158, 0x00020202,
+	160, 0x01000000,
+	161, 0x01010064,
+	162, 0x01010101,
+	163, 0x00000101,
+	165, 0x00020000,
+	166, 0x00000064,
+	168, 0x000b0b00,
+	170, 0x02000200,
+	171, 0x02000200,
+	175, 0x02000200,
+	176, 0x02000200,
+	180, 0x80000100,
+	181, 0x04070303,
+	182, 0x0000000a,
+	185, 0x0010ffff,
+	187, 0x0000000f,
+	194, 0x00000204,
+	205, 0x00000000,
+	0xffffffff};
+
+unsigned int ddr2_init_tab[] = {
+		0,	0x0,
+		0xffffffff
+};
+
+unsigned int ddr2_init_tab_667[] = {
+	0, 0x00000400,
+	1, 0x00000000,
+	2, 0x00000000,
+	3, 0x00000043,
+	4, 0x000000a7,
+	5, 0x0a040a02,
+	6, 0x04020404,
+	7, 0x05030e12,
+	8, 0x030e1204,
+	9, 0x04020305,
+	10, 0x03005b26,
+	11, 0x04020303,
+	12, 0x03005b26,
+	13, 0x01010003,
+	15, 0x000a0a00,
+	16, 0x030000c8,
+	17, 0x00860f0f,
+	18, 0x06060086,
+	19, 0x00000000,
+	20, 0x00004201,
+	21, 0x00420a24,
+	22, 0x00050a24,
+	23, 0x00000300,
+	24, 0x000a0003,
+	25, 0x0003000a,
+	26, 0x0003000a,
+	27, 0x00c8000a,
+	28, 0x00c80046,
+	29, 0x00000046,
+	30, 0x03000001,
+	31, 0x00030303,
+	32, 0x00000000,
+	33, 0x00000000,
+	34, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x00085300,
+	45, 0x00000004,
+	46, 0x00040853,
+	47, 0x00000000,
+	48, 0x08530000,
+	49, 0x00000004,
+	50, 0x00040853,
+	51, 0x00000000,
+	52, 0x08530000,
+	53, 0x00000004,
+	54, 0x00040853,
+	55, 0x00000000,
+	56, 0x08530000,
+	57, 0x00000004,
+	58, 0x00040853,
+	59, 0x00000000,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000,
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01020001,
+	85, 0x01010101,
+	86, 0x0f000003,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02020101,
+	109, 0x08080404,
+	110, 0x03020000,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x001d1d00,
+	129, 0x1d1d0001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00011d1d,
+	134, 0x00011d1d,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x001d1d00,
+	138, 0x1d1d0001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00011d1d,
+	143, 0x00011d1d,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x001d1d00,
+	147, 0x1d1d0001,
+	151, 0x00000000,
+	154, 0x00000000,
+	155, 0x00000000,
+	159, 0x00000000,
+	164, 0x00000000,
+	167, 0x00000000,
+	169, 0x0a240000,
+	172, 0x00000a24,
+	173, 0x00006568,
+	174, 0x0a240404,
+	177, 0x00000a24,
+	178, 0x00006568,
+	179, 0x02020404,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x0001046b,
+	203, 0x0001046b,
+	204, 0x00000000,
+	206, 0x02030301,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x05050000,
+	211, 0x00000505,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x02010505,
+	215, 0x00000102,
+	216, 0x00001a1a,
+	217, 0x00000000,
+	0xffffffff
+};
+
+unsigned int ddr2_init_tab_800[] = {
+	0, 0x00000400,
+	1, 0x00000000,
+	2, 0x00000000,
+	3, 0x00000050,
+	4, 0x000000c8,
+	5, 0x0c050c02,
+	6, 0x04020405,
+	7, 0x06031016,
+	8, 0x03101604,
+	9, 0x05020306,
+	10, 0x03006d60,
+	11, 0x05020303,
+	12, 0x03006d60,
+	13, 0x01010003,
+	15, 0x000c0c00,
+	16, 0x030000c8,
+	17, 0x00a01212,
+	18, 0x070700a0,
+	19, 0x00000000,
+	20, 0x00004f01,
+	21, 0x004f0c2d,
+	22, 0x00050c2d,
+	23, 0x00000300,
+	24, 0x000a0003,
+	25, 0x0003000a,
+	26, 0x0003000a,
+	27, 0x00c8000a,
+	28, 0x00c80053,
+	29, 0x00000053,
+	30, 0x03000001,
+	31, 0x00030303,
+	32, 0x00000000,
+	33, 0x00000000,
+	34, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x000a6300,
+	45, 0x00000004,
+	46, 0x00040a63,
+	47, 0x00000000,
+	48, 0x0a630000,
+	49, 0x00000004,
+	50, 0x00040a63,
+	51, 0x00000000,
+	52, 0x0a630000,
+	53, 0x00000004,
+	54, 0x00040a63,
+	55, 0x00000000,
+	56, 0x0a630000,
+	57, 0x00000004,
+	58, 0x00040a63,
+	59, 0x00000000,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000,
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01020001,
+	85, 0x01010101,
+	86, 0x0f000003,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02020101,
+	109, 0x08080404,
+	110, 0x03020000,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x001d1d00,
+	129, 0x1d1d0001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00011d1d,
+	134, 0x00011d1d,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x001d1d00,
+	138, 0x1d1d0001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00011d1d,
+	143, 0x00011d1d,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x001d1d00,
+	147, 0x1d1d0001,
+	151, 0x00000000,
+	154, 0x00000000,
+	155, 0x00000000,
+	159, 0x00000000,
+	164, 0x00000000,
+	167, 0x00000000,
+	169, 0x0c2d0000,
+	172, 0x00000c2d,
+	173, 0x000079c2,
+	174, 0x0c2d0505,
+	177, 0x00000c2d,
+	178, 0x000079c2,
+	179, 0x02020505,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00013880,
+	203, 0x00013880,
+	204, 0x00000000,
+	206, 0x02030301,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x06060000,
+	211, 0x00000606,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x02010505,
+	215, 0x00000102,
+	216, 0x00001c1c,
+	217, 0x00000000,
+	0xffffffff
+};
+
+unsigned int ddr2_init_tab_1066[] = {
+	0, 0x00000400,
+	1, 0x00000000,
+	2, 0x00000000,
+	3, 0x0000006b,
+	4, 0x0000010a,
+	5, 0x0e060e02,
+	6, 0x06020406,
+	7, 0x0704161d,
+	8, 0x04161d06,
+	9, 0x07020407,
+	10, 0x03009173,
+	11, 0x07020403,
+	12, 0x03009173,
+	13, 0x01010003,
+	15, 0x000f0f00,
+	16, 0x030000c8,
+	17, 0x00d51818,
+	18, 0x080800d5,
+	19, 0x00000000,
+	20, 0x00006a01,
+	21, 0x006a1033,
+	22, 0x00051033,
+	23, 0x00000300,
+	24, 0x000d0003,
+	25, 0x0003000d,
+	26, 0x0003000a,
+	27, 0x00c8000a,
+	28, 0x00c8006f,
+	29, 0x0000006f,
+	30, 0x03000001,
+	31, 0x00030303,
+	32, 0x00000000,
+	33, 0x00000000,
+	34, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x000e7300,
+	45, 0x00000004,
+	46, 0x00040e73,
+	47, 0x00000000,
+	48, 0x0e730000,
+	49, 0x00000004,
+	50, 0x00040e73,
+	51, 0x00000000,
+	52, 0x0e730000,
+	53, 0x00000004,
+	54, 0x00040e73,
+	55, 0x00000000,
+	56, 0x0e730000,
+	57, 0x00000004,
+	58, 0x00040e73,
+	59, 0x00000000,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000,
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01020001,
+	85, 0x01010101,
+	86, 0x0f000003,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02020101,
+	109, 0x08080404,
+	110, 0x03020000,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x001c1c00,
+	129, 0x1c1c0001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00011c1c,
+	134, 0x00011c1c,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x001c1c00,
+	138, 0x1c1c0001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00011c1c,
+	143, 0x00011c1c,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x001c1c00,
+	147, 0x1c1c0001,
+	151, 0x00000000,
+	154, 0x00000000,
+	155, 0x00000000,
+	159, 0x00000000,
+	164, 0x00000000,
+	167, 0x00000000,
+	169, 0x10330000,
+	172, 0x00001033,
+	173, 0x0000a1fe,
+	174, 0x10330606,
+	177, 0x00001033,
+	178, 0x0000a1fe,
+	179, 0x02020606,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00019f8f,
+	203, 0x00019f8f,
+	204, 0x00000000,
+	206, 0x02030301,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x08070000,
+	211, 0x00000807,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x02010505,
+	215, 0x00000102,
+	216, 0x00001e1e,
+	217, 0x00000000,
+	0xffffffff
+};
+
+unsigned int ddr3_init_tab_667[] = {
+	0, 0x00000600,
+	1, 0x00000000,
+	3, 0x00000043,
+	4, 0x000000a7,
+	5, 0x0a050a00,
+	6, 0x04040405,
+	7, 0x05040e14,
+	8, 0x040e1404,
+	9, 0x0c040405,
+	10, 0x03005b68,
+	11, 0x0c040404,
+	12, 0x03005b68,
+	13, 0x01010004,
+	15, 0x000a0a00,
+	16, 0x03000200,
+	17, 0x00000f0f,
+	18, 0x05050000,
+	19, 0x00000000,
+	20, 0x00007801,
+	21, 0x00780a20,
+	22, 0x00050a20,
+	23, 0x00000300,
+	24, 0x000a0003,
+	25, 0x0000000a,
+	26, 0x00000000,
+	27, 0x02000000,
+	28, 0x0200005a,
+	29, 0x0000005a,
+	30, 0x05000001,
+	31, 0x00050505,
+	32, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x00021000,
+	45, 0x00000046,
+	46, 0x00460210,
+	47, 0x00000000,
+	48, 0x02100000,
+	49, 0x00000046,
+	50, 0x00460210,
+	51, 0x00000000,
+	52, 0x02100000,
+	53, 0x00000046,
+	54, 0x00460210,
+	55, 0x00000000,
+	56, 0x02100000,
+	57, 0x00000046,
+	58, 0x00460210,
+	59, 0x00000000,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000, /* No ECC, set to 0x3 for ECC reporting and correcting */
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01010001,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02040108,
+	109, 0x08010402,
+	110, 0x02020002,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x00212100,
+	129, 0x21210001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00012121,
+	134, 0x00012121,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x00212100,
+	138, 0x21210001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00012121,
+	143, 0x00012121,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x00212100,
+	147, 0x21210001,
+	151, 0x00000000,
+	167, 0x00000000,
+	169, 0x0a200000,
+	172, 0x00000a20,
+	173, 0x00006540,
+	174, 0x0a200504,
+	177, 0x00000a20,
+	178, 0x00006540,
+	179, 0x02020504,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00000004,
+	203, 0x00000004,
+	204, 0x00000000,
+	206, 0x02040401,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x05050000,
+	211, 0x00000505,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x01010606,
+	215, 0x00000101,
+	216, 0x00001a1a,
+	217, 0x00000000,
+	0xffffffff};
+
+unsigned int ddr3_init_tab_800[] = {
+	0, 0x00000600,
+	1, 0x00000000,
+	3, 0x00000050,
+	4, 0x000000c8,
+	5, 0x0c050c00,
+	6, 0x04040405,
+	7, 0x06041018,
+	8, 0x04101804,
+	9, 0x0c040406,
+	10, 0x03006db0,
+	11, 0x0c040404,
+	12, 0x03006db0,
+	13, 0x01010004,
+	15, 0x000c0c00,
+	16, 0x03000200,
+	17, 0x00001212,
+	18, 0x06060000,
+	19, 0x00000000,
+	20, 0x00009001,
+	21, 0x00900c28,
+	22, 0x00050c28,
+	23, 0x00000300,
+	24, 0x000a0003,
+	25, 0x0000000a,
+	26, 0x00000000,
+	27, 0x02000000,
+	28, 0x0200006c,
+	29, 0x0000006c,
+	30, 0x05000001,
+	31, 0x00050505,
+	32, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x00042000,
+	45, 0x00000046,
+	46, 0x00460420,
+	47, 0x00000000,
+	48, 0x04200000,
+	49, 0x00000046,
+	50, 0x00460420,
+	51, 0x00000000,
+	52, 0x04200000,
+	53, 0x00000046,
+	54, 0x00460420,
+	55, 0x00000000,
+	56, 0x04200000,
+	57, 0x00000046,
+	58, 0x00460420,
+	59, 0x00000000,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000, /* No ECC, set to 0x3 for ECC reporting and correcting */
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01010001,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02040108,
+	109, 0x08010402,
+	110, 0x02020002,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x00212100,
+	129, 0x21210001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00012121,
+	134, 0x00012121,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x00212100,
+	138, 0x21210001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00012121,
+	143, 0x00012121,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x00212100,
+	147, 0x21210001,
+	151, 0x00000000,
+	167, 0x00000000,
+	169, 0x0c280000,
+	172, 0x00000c28,
+	173, 0x00007990,
+	174, 0x0c280505,
+	177, 0x00000c28,
+	178, 0x00007990,
+	179, 0x02020505,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00000004,
+	203, 0x00000004,
+	204, 0x00000000,
+	206, 0x02040401,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x06060000,
+	211, 0x00000606,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x01010606,
+	215, 0x00000101,
+	216, 0x00001c1c,
+	217, 0x00000000,
+	0xffffffff};
+
+unsigned int ddr3_init_tab_1066[] = {
+	0, 0x00000600,
+	1, 0x00000000,
+	3, 0x0000006b,
+	4, 0x0000010a,
+	5, 0x10061000,
+	6, 0x04040406,
+	7, 0x0804131a,
+	8, 0x04131a04,
+	9, 0x0c040408,
+	10, 0x030091dd,
+	11, 0x0c040404,
+	12, 0x030091dd,
+	13, 0x01010004,
+	15, 0x00101000,
+	16, 0x03000200,
+	17, 0x00001616,
+	18, 0x08080000,
+	19, 0x00000000,
+	20, 0x0000a001,
+	21, 0x00a0102d,
+	22, 0x0005102d,
+	23, 0x00000400,
+	24, 0x000d0004,
+	25, 0x0000000d,
+	26, 0x00000000,
+	27, 0x02000000,
+	28, 0x020000a5,
+	29, 0x000000a5,
+	30, 0x06000001,
+	31, 0x00060606,
+	32, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x00084000,
+	45, 0x00080046,
+	46, 0x00460840,
+	47, 0x00000008,
+	48, 0x08400000,
+	49, 0x00080046,
+	50, 0x00460840,
+	51, 0x00000008,
+	52, 0x08400000,
+	53, 0x00080046,
+	54, 0x00460840,
+	55, 0x00000008,
+	56, 0x08400000,
+	57, 0x00080046,
+	58, 0x00460840,
+	59, 0x00000008,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000, /* No ECC, set to 0x3 for ECC reporting and correcting */
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01010001,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02040108,
+	109, 0x08010402,
+	110, 0x02020002,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x00212100,
+	129, 0x21210001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00012121,
+	134, 0x00012121,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x00212100,
+	138, 0x21210001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00012121,
+	143, 0x00012121,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x00212100,
+	147, 0x21210001,
+	151, 0x00000000,
+	167, 0x00000000,
+	169, 0x102d0000,
+	172, 0x0000102d,
+	173, 0x0000a1c2,
+	174, 0x102d0607,
+	177, 0x0000102d,
+	178, 0x0000a1c2,
+	179, 0x02020607,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00000006,
+	203, 0x00000006,
+	204, 0x00000000,
+	206, 0x02050501,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x08080000,
+	211, 0x00000808,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x01010606,
+	215, 0x00000101,
+	216, 0x00002020,
+	217, 0x00000000,
+	0xffffffff};
+
+unsigned int ddr3_init_tab_1600[] = {
+	0, 0x00000600,
+	1, 0x00000000,
+	3, 0x000000a0,
+	4, 0x00000190,
+	5, 0x16081600,
+	6, 0x06040408,
+	7, 0x0b061c27,
+	8, 0x061c2706,
+	9, 0x0c04060b,
+	10, 0x0400db60,
+	11, 0x0c040604,
+	12, 0x0400db60,
+	13, 0x01010004,
+	15, 0x00171700,
+	16, 0x03000200,
+	17, 0x00002020,
+	18, 0x0b0b0000,
+	19, 0x00000000,
+	20, 0x0000f001,
+	21, 0x00f01858,
+	22, 0x00051858,
+	23, 0x00000500,
+	24, 0x00140005,
+	25, 0x00000014,
+	26, 0x00000000,
+	27, 0x02000000,
+	28, 0x020000f8,
+	29, 0x000000f8,
+	30, 0x08000001,
+	31, 0x00080808,
+	32, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x000c7000,
+	45, 0x00180046,
+	46, 0x00460c70,
+	47, 0x00000018,
+	48, 0x0c700000,
+	49, 0x00180046,
+	50, 0x00460c70,
+	51, 0x00000018,
+	52, 0x0c700000,
+	53, 0x00180046,
+	54, 0x00460c70,
+	55, 0x00000018,
+	56, 0x0c700000,
+	57, 0x00180046,
+	58, 0x00460c70,
+	59, 0x00000018,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000, /* No ECC, set to 0x3 for ECC reporting and correcting */
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01010001,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02040108,
+	109, 0x08010402,
+	110, 0x02020002,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x00232300,
+	129, 0x23230001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00012323,
+	134, 0x00012323,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x00232300,
+	138, 0x23230001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00012323,
+	143, 0x00012323,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x00232300,
+	147, 0x23230001,
+	151, 0x00000000,
+	167, 0x00000000,
+	169, 0x18580000,
+	172, 0x00001858,
+	173, 0x0000f370,
+	174, 0x1858080a,
+	177, 0x00001858,
+	178, 0x0000f370,
+	179, 0x0202080a,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00000008,
+	203, 0x00000008,
+	204, 0x00000000,
+	206, 0x02070701,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x0c0b0000,
+	211, 0x00000c0b,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x01010606,
+	215, 0x00000101,
+	216, 0x00002727,
+	217, 0x00000000,
+	0xffffffff};
+
+ddr3_init_tab_1333[] = {
+	0, 0x00000600,
+	1, 0x00000000,
+	3, 0x000208d6,
+	4, 0x00051616,
+	5, 0x12071200,
+	6, 0x05040407,
+	7, 0x09051821,
+	8, 0x05182105,
+	9, 0x0c040509,
+	10, 0x0400b6d0,
+	11, 0x0c040504,
+	12, 0x0400b6d0,
+	13, 0x01010004,
+	15, 0x00131300,
+	16, 0x03000200,
+	17, 0x00001b1b,
+	18, 0x09090000,
+	19, 0x00000000,
+	20, 0x0000c801,
+	21, 0x00c81448,
+	22, 0x00051448,
+	23, 0x00000400,
+	24, 0x00100004,
+	25, 0x00000010,
+	26, 0x00000000,
+	27, 0x02000000,
+	28, 0x020000cf,
+	29, 0x000000cf,
+	30, 0x07000001,
+	31, 0x00070707,
+	32, 0x00000000,
+	35, 0x00000000,
+	41, 0x00000000,
+	43, 0x00000000,
+	44, 0x000a5000,
+	45, 0x00100046,
+	46, 0x00460a50,
+	47, 0x00000010,
+	48, 0x0a500000,
+	49, 0x00100046,
+	50, 0x00460a50,
+	51, 0x00000010,
+	52, 0x0a500000,
+	53, 0x00100046,
+	54, 0x00460a50,
+	55, 0x00000010,
+	56, 0x0a500000,
+	57, 0x00100046,
+	58, 0x00460a50,
+	59, 0x00000010,
+	60, 0x00000000,
+	62, 0x00000000,
+	63, 0x00000000,
+	64, 0x00000000,
+	65, 0x00000000,
+	66, 0x00000000,
+	67, 0x00000000,
+	68, 0x00000000,
+	69, 0x00000000,
+	70, 0x00000000,
+	71, 0x00000000,
+	72, 0x00000000,
+	73, 0x00000000,
+	74, 0x00000000,
+	75, 0x00000000,
+	76, 0x00000000,
+	77, 0x00000000,
+	82, 0x01010001,
+	89, 0x00000000,
+	90, 0x00000000,
+	91, 0x00000000,
+	92, 0x00000000,
+	93, 0x00000000,
+	94, 0x00000000,
+	95, 0x00000000,
+	96, 0x00000000,
+	97, 0x00000000,
+	98, 0x00000000,
+	99, 0x00000000,
+	100, 0x00000000,
+	101, 0x00000000,
+	102, 0x00000000,
+	103, 0x00000000,
+	104, 0x00000000,
+	105, 0x00000000,
+	106, 0x00000000,
+	107, 0x00000000,
+	108, 0x02040108,
+	109, 0x08010402,
+	110, 0x02020002,
+	111, 0x01000200,
+	113, 0x00000000,
+	114, 0x00000000,
+	115, 0x00000000,
+	118, 0x00000000,
+	124, 0x00000000,
+	125, 0x00000000,
+	126, 0x00000000,
+	127, 0x00000000,
+	128, 0x00222200,
+	129, 0x22220001,
+	131, 0x00000000,
+	132, 0x00000000,
+	133, 0x00012222,
+	134, 0x00012222,
+	135, 0x00000000,
+	136, 0x00000000,
+	137, 0x00222200,
+	138, 0x22220001,
+	140, 0x00000000,
+	141, 0x00000000,
+	142, 0x00012222,
+	143, 0x00012222,
+	144, 0x00000000,
+	145, 0x00000000,
+	146, 0x00222200,
+	147, 0x22220001,
+	151, 0x00000000,
+	167, 0x00000000,
+	168, 0x000c0c00,
+	169, 0x14480000,
+	172, 0x00001448,
+	173, 0x0000cad0,
+	174, 0x14480708,
+	177, 0x00001448,
+	178, 0x0000cad0,
+	179, 0x02020708,
+	183, 0x00000000,
+	184, 0x00000000,
+	186, 0x00070303,
+	188, 0x00000000,
+	189, 0x00000000,
+	190, 0x00000000,
+	191, 0x00000000,
+	192, 0x00000000,
+	193, 0x00000000,
+	195, 0x00000000,
+	196, 0x00000000,
+	197, 0x00000000,
+	198, 0x00000000,
+	199, 0x00000000,
+	200, 0x00000000,
+	201, 0x00000000,
+	202, 0x00000007,
+	203, 0x00000007,
+	204, 0x00000000,
+	206, 0x02060601,
+	207, 0x00000002,
+	208, 0x00000000,
+	209, 0x00000000,
+	210, 0x0a090000,
+	211, 0x00000a09,
+	212, 0x00000040,
+	213, 0x00000000,
+	214, 0x01010606,
+	215, 0x00000101,
+	216, 0x00002323,
+	217, 0x00000000,
+	0xffffffff
+};
+
+unsigned int ddr3_init_tab_933[] = { /* to be added */
+	0, 0,
+	0xffffffff};
+
+unsigned int ddr2_mode_reg_tab[] = {
+		0x0320,
+		0x0046,
+		0x0000,
+		0x0000
+};
+
+unsigned int ddr3_mode_reg_tab[] = {
+		0x0320,
+		0x0046,
+		0x0000,
+		0x0000
+};
+
+unsigned int ddr_clk_tab[] = {
+	/*  clk,	ndiv,	MDIV
+						0	1	2	3	4	5 */
+
+		333,	120,	30,	18,	0, 100, 15, 24,
+		400,	120,	30,	15,	0, 100, 15, 24,
+		467,    140,	35,	15,	0, 175, 18, 24,
+		533,	128,	32,	12,	0, 80,  16, 24,
+		667,	120,	30,	9,	0, 100, 15, 24,
+		800,	128,	32,	8,	0, 80,  16, 24,
+		0xffffffff
+};
+
+unsigned int ddr_phy_wl0_tab[] = {
+0x000,	0x0001001a,
+0x004,	0x00010000,
+0x008,	0x00010022,
+0x00c,	0x00010022,
+0x010,	0x0001001c,
+0x014,	0x0001001c,
+0x018,	0x0001001c,
+0x01c,	0x0001001c,
+0x020,	0x0001001c,
+0x024,	0x0001001c,
+0x028,	0x0001001c,
+0x02c,	0x0001001c,
+0x030,	0x00000000,
+0x034,	0x0001000a,
+0x038,	0x0001000a,
+0x03c,	0x0001000a,
+0x040,	0x0001000a,
+0x044,	0x0001000a,
+0x048,	0x0001000a,
+0x04c,	0x0001000a,
+0x050,	0x0001000a,
+0x054,	0x0001000a,
+0x058,	0x0001000a,
+0x05c,	0x0001000a,
+0x060,	0x0001000a,
+0x064,	0x0001000a,
+0x068,	0x0001000a,
+0x06c,	0x0001000a,
+0x070,	0x0001000a,
+0x074,	0x0001001b,
+0x0a4,	0x00010000,
+0x0a8,	0x00010021,
+0x0ac,	0x00010021,
+0x0b0,	0x0001001e,
+0x0b4,	0x0001001e,
+0x0b8,	0x0001001e,
+0x0bc,	0x0001001e,
+0x0c0,	0x0001001e,
+0x0c4,	0x0001001e,
+0x0c8,	0x0001001e,
+0x0cc,	0x0001001e,
+0x0d0,	0x00000000,
+0x0d4,	0x00010009,
+0x0d8,	0x00010009,
+0x0dc,	0x00010009,
+0x0e0,	0x00010009,
+0x0e4,	0x00010009,
+0x0e8,	0x00010009,
+0x0ec,	0x00010009,
+0x0f0,	0x00010009,
+0x0f4,	0x00010009,
+0x0f8,	0x00010009,
+0x0fc,	0x00010009,
+0x100,	0x00010009,
+0x104,	0x00010009,
+0x108,	0x00010009,
+0x10c,	0x00010009,
+0x110,	0x00010009,
+0x114,	0x00010019,
+0x118,	0x00000000,
+0x11c,	0x00000000,
+0x120,	0x00000000,
+0x124,	0x00000000,
+0x128,	0x00000000,
+0x12c,	0x00000000,
+0x130,	0x00000000,
+0x134,	0x00000000,
+0x138,	0x00000000,
+0x13c,	0x00000000,
+0x140,	0x00000000,
+0x144,	0x00000000,
+0x148,	0x00000000,
+0x14c,	0x00000000,
+0x150,	0x00000000,
+0x154,	0x00000000,
+0x158,	0x00000000,
+0x15c,	0x00000000,
+0x160,	0x00000003,
+0x164,	0x00000007,
+0x168,	0x00000000,
+0x16c,	0x00000000,
+0x170,	0x0000b966,
+0x174,	0x000063bc,
+0x178,	0x0000851a,
+0x17c,	0x00000fc0,
+0x180,	0x0000b293,
+0x184,	0x00007657,
+0x188,	0x00003514,
+0x18c,	0x0000e2c3,
+0x190,	0x00000000,
+0x194,	0x00000000,
+0x198,	0x00000000,
+0x19c,	0x00000000,
+0x1a0,	0x00500000,
+0x1a4,	0x0000000a,
+0x1a8,	0x00000000,
+0x1ac,	0x00000003,
+0x1b0,	0x00000000,
+0xffffffff
+};
+
+unsigned int ddr_phy_ctl_ovrd_tab[] = {
+0x030,	0x00000000,
+0x034,	0x00010028,
+0x06c,	0x000007df,
+0xffffffff
+};
diff --git a/board/accton/as_28t_ops/u-boot-custom.lds b/board/accton/as_28t_ops/u-boot-custom.lds
new file mode 100644
index 0000000..58b534a
--- /dev/null
+++ b/board/accton/as_28t_ops/u-boot-custom.lds
@@ -0,0 +1,91 @@
+/*
+ * January 2004 - Changed to support H4 device
+ * Copyright (c) 2004-2008 Texas Instruments
+ *
+ * (C) Copyright 2002
+ * Gary Jennejohn, DENX Software Engineering, <garyj@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
+OUTPUT_ARCH(arm)
+ENTRY(_start)
+SECTIONS
+{
+	. = 0x00000000;
+
+	. = ALIGN(4);
+	.text :
+	{
+		__image_copy_start = .;
+		arch/arm/cpu/armv7/start.o	(.text)
+		*(.text)
+	}
+
+	.mmu_table : {
+		. = ALIGN(0x10000);
+		*(section_mmu_table)
+	}
+
+	. = ALIGN(4);
+	.rodata : { *(SORT_BY_ALIGNMENT(SORT_BY_NAME(.rodata*))) }
+
+	. = ALIGN(4);
+	.data : {
+		*(.data)
+	}
+
+	. = ALIGN(4);
+
+	. = .;
+	__u_boot_cmd_start = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end = .;
+
+	. = ALIGN(4);
+
+	__image_copy_end = .;
+
+	.rel.dyn : {
+		__rel_dyn_start = .;
+		*(.rel*)
+		__rel_dyn_end = .;
+	}
+
+	.dynsym : {
+		__dynsym_start = .;
+		*(.dynsym)
+	}
+
+
+	.bss __rel_dyn_start (OVERLAY) : {
+		__bss_start = .;
+		*(.bss)
+		 . = ALIGN(4);
+		__bss_end__ = .;
+        _end = .;
+	}
+
+	/DISCARD/ : { *(.dynstr*) }
+	/DISCARD/ : { *(.dynamic*) }
+	/DISCARD/ : { *(.plt*) }
+	/DISCARD/ : { *(.interp*) }
+	/DISCARD/ : { *(.gnu*) }
+}
diff --git a/board/accton/as_28t_ops/u-boot-nr.lds b/board/accton/as_28t_ops/u-boot-nr.lds
new file mode 100644
index 0000000..c3586c3
--- /dev/null
+++ b/board/accton/as_28t_ops/u-boot-nr.lds
@@ -0,0 +1,99 @@
+/*
+ * January 2004 - Changed to support H4 device
+ * Copyright (c) 2004-2008 Texas Instruments
+ *
+ * (C) Copyright 2002
+ * Gary Jennejohn, DENX Software Engineering, <garyj@denx.de>
+ *
+ * See file CREDITS for list of people who contributed to this
+ * project.
+ *
+ * This program is free software; you can redistribute it and/or
+ * modify it under the terms of the GNU General Public License as
+ * published by the Free Software Foundation; either version 2 of
+ * the License, or (at your option) any later version.
+ *
+ * This program is distributed in the hope that it will be useful,
+ * but WITHOUT ANY WARRANTY; without even the implied warranty of
+ * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
+ * GNU General Public License for more details.
+ *
+ * You should have received a copy of the GNU General Public License
+ * along with this program; if not, write to the Free Software
+ * Foundation, Inc., 59 Temple Place, Suite 330, Boston,
+ * MA 02111-1307 USA
+ */
+
+OUTPUT_FORMAT("elf32-littlearm", "elf32-littlearm", "elf32-littlearm")
+OUTPUT_ARCH(arm)
+ENTRY(_start)
+SECTIONS
+{
+	. = 0x1C000000;
+
+	. = ALIGN(4);
+	.text	:
+	{
+		__image_copy_start = .;
+		arch/arm/cpu/armv7/start.o	(.text)
+		*(.text)
+	}
+
+	.mmu_table : {
+		. = ALIGN(0x10000);
+		*(section_mmu_table)
+	}
+
+	. = ALIGN(4);
+	.rodata : { *(SORT_BY_ALIGNMENT(SORT_BY_NAME(.rodata*))) }
+	. = ALIGN(4);
+	__data_start_load = .;
+	.data 0xC0003000 :
+	  AT ( __data_start_load )
+	{
+		__data_start = .;
+		*(.data)
+	}
+
+	. = ALIGN(4);
+
+	. = .;
+	__u_boot_cmd_start = .;
+	.u_boot_cmd : { *(.u_boot_cmd) }
+	__u_boot_cmd_end = .;
+
+	. = ALIGN(4);
+
+	__image_copy_end = .;
+
+	.rel.dyn : {
+		__rel_dyn_start = .;
+		*(.rel*)
+		__rel_dyn_end = .;
+	}
+
+	.dynsym : {
+		__dynsym_start = .;
+		*(.dynsym)
+	}
+
+	.bss __rel_dyn_start (OVERLAY) : {
+		__bss_start = .;
+		*(.bss)
+		 . = ALIGN(4);
+		__bss_end__ = .;
+        _end = .;
+	}
+
+	.irqstack : {
+		__irqstack_end = .;
+		. = . + 0x2008;
+		__irqstack_start = .;
+	}
+
+	/DISCARD/ : { *(.dynstr*) }
+	/DISCARD/ : { *(.dynamic*) }
+	/DISCARD/ : { *(.plt*) }
+	/DISCARD/ : { *(.interp*) }
+	/DISCARD/ : { *(.gnu*) }
+}
diff --git a/boards.cfg b/boards.cfg
index 368f3c4..3540c9a 100644
--- a/boards.cfg
+++ b/boards.cfg
@@ -308,6 +308,7 @@ hurricane2_nand              arm         armv7       bcm95615x           broadco
 hurricane2_nor              arm         armv7        bcm95615x           broadcom       hurricane2        hurricane2:L2C_AS_RAM,RUN_DDR_SHMOO2,CUSTOM_LINKER_SCRIPT,NOR_IPROC_BOOT
 hurricane2_noshmoo           arm         armv7       bcm95615x           broadcom       hurricane2        hurricane2:CUSTOM_LINKER_SCRIPT
 hurricane2_rom_emul          arm         armv7       bcm95333x           broadcom       hurricane2        hurricane2_rom_emul:L2C_AS_RAM,NO_CODE_RELOC
+AS_28T_OPS                   arm         armv7       as_28t_ops           accton        hurricane2        AS_28T_OPS:ONIE_PLATFORM_REV=0
 katana2                       arm         armv7       bcm95645x           broadcom       katana2           katana2:RUN_DDR_SHMOO2,IPROC_DDR_ECC 
 katana2_nand                  arm         armv7       bcm95645x           broadcom       katana2           katana2:RUN_DDR_SHMOO2,IPROC_DDR_ECC,NAND_IPROC_BOOT
 origen			     arm	 armv7	     origen		 samsung	exynos
diff --git a/broadcom_boards.mk b/broadcom_boards.mk
index 60b2ecf..ba75cdf 100644
--- a/broadcom_boards.mk
+++ b/broadcom_boards.mk
@@ -151,6 +151,10 @@ hurricane2_rom_emul_config: $(obj)hurricane2_rom_emul_config
 $(obj)hurricane2_rom_emul_config: $(TOPDIR)/include/configs/hurricane2_rom_emul.h 
 	@$(MKCONFIG) -A $(@F:_config=); touch $@
 
+AS_28T_OPS_config: $(obj)AS_28T_OPS_config
+$(obj)AS_28T_OPS_config: $(TOPDIR)/include/configs/AS_28T_OPS.h
+	@$(MKCONFIG) -A $(@F:_config=); touch $@
+
 katana2_config: $(obj)katana2_config 
 $(obj)katana2_config: $(TOPDIR)/include/configs/katana2.h  
 	@$(MKCONFIG) -A $(@F:_config=); touch $@
diff --git a/common/cmd_sys_eeprom.c b/common/cmd_sys_eeprom.c
index cf2ed1c..6a52b5e 100644
--- a/common/cmd_sys_eeprom.c
+++ b/common/cmd_sys_eeprom.c
@@ -1206,11 +1206,29 @@ int mac_read_from_eeprom(void)
 				macbase[0], macbase[1], macbase[2],
 				macbase[3], macbase[4], macbase[5]);
 			sprintf(enetvar, i ? "eth%daddr" : "ethaddr", i);
+#if 1
+{
+			/* aaron_lien, 2013/08/05,
+			 * Initialize $ethaddr if it is blank or
+			 * if the current value is different from non-volatile board information
+			 * then change it.
+			 */
+			char *env;
+			env = getenv(enetvar);
+			if (!env) {
+				setenv(enetvar, ethaddr);
+			} else {
+				if(strcmp(env, ethaddr))
+					setenv(enetvar, ethaddr);
+			}
+}
+#else
 			/* Only initialize environment variables that are blank
 			 * (i.e. have not yet been set)
 			 */
 			if (!getenv(enetvar))
 				setenv(enetvar, ethaddr);
+#endif
 
 			macbase[5]++;
 			if (macbase[5] == 0) {
diff --git a/drivers/net/bcmiproc_ethHw.c b/drivers/net/bcmiproc_ethHw.c
index 1dc6dc6..a8c4160 100755
--- a/drivers/net/bcmiproc_ethHw.c
+++ b/drivers/net/bcmiproc_ethHw.c
@@ -541,7 +541,7 @@ ethHw_chipAttach(bcm_eth_t *eth_data)
 #elif (defined(CONFIG_GREYHOUND))
     ch->phyaddr = CONFIG_EXTERNAL_PHY_DEV_ID;
 #else
-	ch->phyaddr = CONFIG_GMAC_NUM+1;
+	ch->phyaddr = 0x18;
 #endif
 	/* get our phyaddr value */
 	sprintf(name, "et%dphyaddr", eth_data->unit);
@@ -1479,7 +1479,7 @@ ethHw_miiphy_read(unsigned int const phyaddr,
 
 	printf("%s (addr&f):phyaddr (addr&1f00):bank\n", __FUNCTION__);
 	//printf("%s phyaddr(0x%x) reg(0x%x)\n", __FUNCTION__, phyaddr, reg);
-	addr = phyaddr&0xf;
+	addr = phyaddr&0x1f;
 	bank = (phyaddr&0x1f00)>>8;
 
 	phy5221_rd_reg(&g_eth_data, addr, bank, reg, &tmp16);
@@ -1544,7 +1544,7 @@ ethHw_miiphy_write(unsigned int const phyaddr,
 
 	printf("%s (addr&f):phyaddr (addr&1f00):bank\n", __FUNCTION__);
 	//printf("%s phyaddr(0x%x) reg(0x%x) *value(0x%x)\n", __FUNCTION__, phyaddr, reg, *value);
-	addr = phyaddr&0xf;
+	addr = phyaddr&0x1f;
 	bank = (phyaddr&0x1f00)>>8;
 
 	printf("%s phyaddr(0x%x) bank(0x%x) reg(0x%x) data(0x%x)\n", __FUNCTION__, addr, bank, reg, *value);
diff --git a/include/configs/AS_28T_OPS.h b/include/configs/AS_28T_OPS.h
new file mode 100644
index 0000000..19d7cbe
--- /dev/null
+++ b/include/configs/AS_28T_OPS.h
@@ -0,0 +1,297 @@
+#ifndef __HURRICANE2_H
+#define __HURRICANE2_H
+
+#include <asm/sizes.h>
+#include "configs/common_config.h"
+
+/*
+ * AS_28T_OPS NOR flash layout
+ * uboot        0x00000000 - 0x000cffff (size 0x000d0000, 832KB)
+ * shmoo        0x000d0000 - 0x000dffff (size 0x00010000, 64KB)
+ * uboot-env    0x000e0000 - 0x000effff (size 0x00010000, 64KB)
+ * onie         0x000f0000 - 0x007effff (size 0x00700000, 7MB)
+ * board_eeprom 0x007f0000 - 0x007fffff (size 0x00010000, 64KB)
+ */
+
+/* High level Configuration Options */
+#define CONFIG_AS_28T_OPS		1	/* accton_as_28t_ops board specific */
+#define CONFIG_BOARDNAME		"AS_28T_OPS"
+#define CONFIG_L2C_AS_RAM
+#define CONFIG_RUN_DDR_SHMOO2
+#define CONFIG_CUSTOM_LINKER_SCRIPT
+
+/* Following are not yet supported on this platform */
+#undef CONFIG_CMD_IRQ
+#undef CONFIG_CMD_JFFS2
+#undef CONFIG_CMD_PCI
+#undef CONFIG_CMD_I2C
+
+#define CONFIG_LZO
+#define CONFIG_RBTREE
+#define CONFIG_MTD_DEVICE
+#define CONFIG_MTD_PARTITIONS
+#define CONFIG_CMD_MTDPARTS
+#define CONFIG_CMD_UBI
+#define CONFIG_CMD_UBIFS
+
+#define CONFIG_BOARD_LATE_INIT
+#define CONFIG_BOARD_EARLY_INIT_F (1)
+#define DEERHOUND_SVK_SDRAM_SIZE	(0x10000000) /* 256 MB */
+#define CONFIG_PHYS_SDRAM_1_SIZE	(0x20000000) /* 512 MB */
+#define IPROC_ETH_MALLOC_BASE 0xD00000
+
+/* Architecture, CPU, etc */
+#define CONFIG_ARMV7
+#define CONFIG_IPROC (1)
+#define CONFIG_HURRICANE2 (1)
+
+/*
+Fix me
+
+When DEBUG is enabled, need to disable both CACHE to make u-boot running
+#define CONFIG_SYS_NO_ICACHE
+#define CONFIG_SYS_NO_DCACHE
+#define DEBUG
+
+*/
+#define CONFIG_IPROC_MMU	(1)
+#define CONFIG_L2_OFF				/* Disable L2 cache */
+#define CONFIG_SYS_ARM_CACHE_WRITETHROUGH (1)
+
+#define CONFIG_MISC_INIT_R			/* Call board's misc_init_r function */
+
+/* Interrupt configuration */
+#define CONFIG_USE_IRQ          1	/* we need IRQ stuff for timer	*/
+
+/* Memory Info */
+#define CONFIG_SYS_MALLOC_LEN			(1024* 1024* 4) /* 4MB to use UBIFS*/
+#define MTDIDS_DEFAULT				"nand0=nand_iproc.0"
+#define MTDPARTS_DEFAULT			"mtdparts=nand_iproc.0:-(open)"
+
+#define CONFIG_STACKSIZE_IRQ			(4096)
+#define CONFIG_STACKSIZE_FIQ			(4096)
+
+#ifdef CONFIG_L2C_AS_RAM
+#define CONFIG_PHYS_SDRAM_0				0x50000000
+#define CONFIG_PHYS_SDRAM_1				0x60000000
+#define CONFIG_LOADADDR					0x70000000 /* default destination location for tftp file (tftpboot cmd) */
+#define CONFIG_PHYS_SDRAM_RSVD_SIZE		0x0 /* bytes reserved from CONFIG_PHYS_SDRAM_1 for custom use */
+#else
+#define CONFIG_PHYS_SDRAM_0				0x1b000000
+#define CONFIG_PHYS_SDRAM_1				0x60000000
+#define CONFIG_LOADADDR					0x70000000 /* default destination location for tftp file (tftpboot cmd) */
+#define CONFIG_PHYS_SDRAM_RSVD_SIZE		0x00000000 /* bytes reserved from CONFIG_PHYS_SDRAM_1 for custom use */
+#endif
+
+/* Where kernel is loaded to in memory */
+#define CONFIG_SYS_LOAD_ADDR				0x70000000
+#define CONFIG_SYS_PROMPT				"accton_as4510-54t-> "
+#define LINUX_BOOT_PARAM_ADDR				0x60200000
+
+#define CONFIG_SYS_MEMTEST_START			CONFIG_PHYS_SDRAM_1
+#define CONFIG_SYS_MEMTEST_END			(CONFIG_PHYS_SDRAM_1+CONFIG_PHYS_SDRAM_1_SIZE)
+#define CONFIG_NR_DRAM_BANKS				1
+
+#define CONFIG_SYS_SDRAM_BASE		(CONFIG_PHYS_SDRAM_1 + CONFIG_PHYS_SDRAM_RSVD_SIZE)
+/* CONFIG_SYS_TEXT_BASE is where u-boot is loaded by boot1 */
+#ifdef CONFIG_L2C_AS_RAM
+#define CONFIG_SYS_STACK_SIZE		(0x0001f000)
+#else
+#define CONFIG_SYS_STACK_SIZE		(0x00003000)
+#endif
+#define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_PHYS_SDRAM_0 + CONFIG_SYS_STACK_SIZE - 16)
+
+/* Clocks */
+#ifdef CONFIG_HURRICANE2_EMULATION
+#define CONFIG_SYS_REF_CLK			(19224) /*Reference clock = 25MHz */
+#define CONFIG_SYS_REF2_CLK			(19224) /*Reference clock = 25MHz */
+#define IPROC_ARM_CLK		(CONFIG_SYS_REF_CLK * 4) /* 100 MHz */
+#define IPROC_AXI_CLK		(CONFIG_SYS_REF_CLK * 16)  /* 400 MHz */
+#define IPROC_APB_CLK		(IPROC_AXI_CLK / 4)  /* 100 MHz */
+#else
+#define CONFIG_SYS_REF_CLK			(25000000) /*Reference clock = 25MHz */
+#define CONFIG_SYS_REF2_CLK			(200000000) /*Reference clock = 25MHz */
+#define IPROC_ARM_CLK		(1000000000) /* 1GHz */
+#define IPROC_AXI_CLK		(400000000)  /* 400 MHz */
+#define IPROC_APB_CLK		(100000000)  /* 100 MHz */
+#endif
+
+#define CONFIG_ENV_OVERWRITE	/* Allow serial# and ethernet mac address to be overwritten in nv storage */
+
+/* NO flash */
+#define CONFIG_SYS_NO_FLASH		/* Not using NAND/NOR unmanaged flash */
+
+/* Ethernet configuration */
+#define CONFIG_BCMIPROC_ETH
+#define CONFIG_NET_MULTI
+#define CONFIG_CMD_MII
+
+/* DMA configuration */
+//#define CONFIG_BCM5301X_DMA
+
+/* General U-Boot configuration */
+#define CONFIG_VERSION_VARIABLE	/* Enabled UBOOT build date/time id string */
+#define CONFIG_AUTO_COMPLETE
+#define CONFIG_SYS_HUSH_PARSER
+#define CONFIG_SYS_PROMPT_HUSH_PS2	"> "
+#define CONFIG_CMDLINE_EDITING
+#define CONFIG_SYS_LONGHELP
+
+#define CONFIG_CRC32_VERIFY		/* Add crc32 to memory verify commands */
+#define CONFIG_MX_CYCLIC			/* Memory display cyclic */
+
+#define CONFIG_CMDLINE_TAG				/* ATAG_CMDLINE setup */
+#define CONFIG_SETUP_MEMORY_TAGS		/* ATAG_MEM setup */
+
+
+//#include <config_cmd_default.h>
+#define CONFIG_ENV_IS_NOWHERE
+#undef CONFIG_CMD_NFS
+#undef CONFIG_GENERIC_MMC
+//#define CONFIG_CMD_MISC
+#include "iproc_common_configs.h"
+
+#define CONFIG_NETMASK		255.255.255.0
+#define CONFIG_IPADDR		192.168.1.10
+#define CONFIG_GATEWAYIP	192.168.1.10
+#define CONFIG_SERVERIP		192.168.1.99
+
+#ifdef UBOOT_MDK
+#define CONFIG_GMAC_NUM		2
+#else
+#define CONFIG_GMAC_NUM		0
+#endif
+
+/* Enable generic u-boot SPI flash drivers and commands */
+#define CONFIG_CMD_SF
+#define CONFIG_SPI_FLASH
+#define CONFIG_SPI_FLASH_STMICRO_NS
+#define CONFIG_SPI_FLASH_MACRONIX_NS
+#define CONFIG_SPI_FLASH_SPANSION
+#define CONFIG_SPI_FLASH_SST
+#define CONFIG_SPI_FLASH_WINBOND
+#define CONFIG_SPI_FLASH_ATMEL
+
+/* SPI flash configurations */
+#define CONFIG_IPROC_QSPI
+#define CONFIG_IPROC_QSPI_BUS                   0
+#define CONFIG_IPROC_QSPI_CS                    0
+
+/* SPI flash configuration - flash specific */
+#define CONFIG_IPROC_BSPI_DATA_LANES            1
+#define CONFIG_IPROC_BSPI_ADDR_LANES            1
+#define CONFIG_IPROC_BSPI_READ_CMD              0x0b
+#define CONFIG_IPROC_BSPI_READ_DUMMY_CYCLES     8
+#define CONFIG_SF_DEFAULT_SPEED                 50000000
+#define CONFIG_SF_DEFAULT_MODE                  SPI_MODE_3
+
+/* Environment variables */
+#undef CONFIG_ENV_IS_NOWHERE
+
+#define CONFIG_ENV_IS_IN_SPI_FLASH              1
+#define CONFIG_ENV_ADDR				0x1e0e0000
+#define CONFIG_ENV_OFFSET                       0xe0000
+#define CONFIG_ENV_SPI_MAX_HZ                   10000000
+#define CONFIG_ENV_SPI_MODE                     SPI_MODE_3
+#define CONFIG_ENV_SPI_BUS                      CONFIG_IPROC_QSPI_BUS
+#define CONFIG_ENV_SPI_CS                       CONFIG_IPROC_QSPI_CS
+#define CONFIG_ENV_SECT_SIZE                    0x10000     /* 64KB */
+
+#define CONFIG_CMD_NAND
+#define CONFIG_IPROC_NAND
+#define CONFIG_SYS_MAX_NAND_DEVICE			1
+#define CONFIG_SYS_NAND_BASE		        0xdeadbeef
+#define CONFIG_SYS_NAND_ONFI_DETECTION
+
+#ifndef CONFIG_NAND_IPROC_BOOT
+/* On hurricane2, NAND and NOR interface share the same chip pins - so they can't be on the same time */
+
+/* NOR flash support */
+#undef CONFIG_SYS_NO_FLASH
+#define CONFIG_SYS_FLASH_QUIET_TEST
+
+/* Board independent required settings */
+#define CONFIG_SYS_FLASH_CFI                 /* Flash is CFI compliant */
+#define CONFIG_FLASH_CFI_DRIVER              /* Use the common CFI flash driver */
+#define CONFIG_SYS_FLASH_EMPTY_INFO  /* print 'E' for empty sector on flinfo */
+#define CONFIG_CMD_FLASH
+
+/* Board dependent required settings */
+#define CONFIG_SYS_FLASH_BASE       0x20000000   /* Address flash is mapped */
+
+/* Max number of banks -- can be greater than available, but cannot be smaller */
+#define CONFIG_SYS_MAX_FLASH_BANKS   1
+/* Max number of sectors -- can be greater than available, but cannot be smaller */
+#define CONFIG_SYS_MAX_FLASH_SECT    512
+
+/* Optional settings */
+#define CONFIG_SYS_FLASH_PROTECTION   0           /* Use hardware flash protection */
+
+
+#define CONFIG_SYS_FLASH_BANKS_LIST    {CONFIG_SYS_FLASH_BASE}
+#define CONFIG_FLASH_SHOW_PROGRESS  1
+
+#define CONFIG_SYS_FLASH_ERASE_TOUT 22000 /* Timeout for Flash Erase (in ms) */
+#define CONFIG_SYS_FLASH_WRITE_TOUT 100 /* Timeout for Flash Write (in ms) */
+
+#endif /* ifndef NAND_BOOT */
+
+#ifdef CONFIG_RUN_DDR_SHMOO2
+/* Shmoo reuse: skip Shmoo process by reusing values saved in flash. */
+#define CONFIG_SHMOO_REUSE
+/* Define it for 32bit DDR */
+#define CONFIG_SHMOO_REUSE_DDR_32BIT            0
+/* Offset of spi flash to save Shmoo values */
+#define CONFIG_SHMOO_REUSE_QSPI_OFFSET          0x000d0000
+/* Sector size containing Shmoo values */
+#define CONFIG_SHMOO_REUSE_QSPI_SIZE            0x10000 /* 64KB */
+/* Offset of NOR flash to save Shmoo values */
+#define CONFIG_SHMOO_REUSE_NOR_OFFSET           0x000d0000
+/* Offset of NAND flash to save Shmoo values */
+#define CONFIG_SHMOO_REUSE_NAND_OFFSET          0x00400000
+/* Range for the partition to support NAND bad blocks replacement */
+#define CONFIG_SHMOO_REUSE_NAND_RANGE           0x00200000
+/* Delay to wait for the magic character to force Shmoo; 0 to disable delay */
+#define CONFIG_SHMOO_REUSE_DELAY_MSECS          50
+/* Length of memory test after restored; 0 to disable memory test */
+#define CONFIG_SHMOO_REUSE_MEMTEST_LENGTH       (0x200000)
+/* Starting address of memory test after restored */
+#define CONFIG_SHMOO_REUSE_MEMTEST_START        IPROC_DDR_MEM_BASE2
+#endif /* CONFIG_RUN_DDR_SHMOO2 */
+
+#define CONFIG_CMD_SYS_EEPROM
+#define CONFIG_SYS_EEPROM_USE_COMMON_SPI_IO
+#define CONFIG_SYS_SPI_FLASH_HWINFO_ADDR	0x007f0000
+#define CONFIG_SYS_SPI_FLASH_HWINFO_SECT_SIZE	0x00010000
+#define CONFIG_SYS_EEPROM_MAX_SIZE		CONFIG_SYS_SPI_FLASH_HWINFO_SECT_SIZE
+#define CONFIG_SYS_EEPROM_LOAD_ENV_MAC
+#define CONFIG_SYS_EEPROM_MAX_NUM_ETH_PORTS	1
+
+#define CONFIG_HOSTNAME		accton-as_28t_ops-unknown
+
+/*
+** Platform environment variables needed by the common env
+** infrastructure.
+**
+*/
+#define CONFIG_PLATFORM_ENV	\
+ "consoledev=ttyS1\0"		\
+ "onie_start=0x1e0f0000\0"	\
+ "onie_sz.b=0x00700000\0"	\
+ "mtdids=nand0=nand_iproc.0\0"	\
+ "mtdparts=mtdparts=nand_iproc.0:-(open)\0"\
+ "initrd_high=0xffffffff\0"	\
+ "diag_start=0x00800000\0"	\
+ "diag_sz.b=0x01800000\0"	\
+ "boot_diag=if test -n $onie_boot_reason; then "\
+  "if test $onie_boot_reason = diag; then "	\
+  "run diag_bootcmd; fi; fi\0"			\
+ "diag_bootcmd=setenv bootargs console=$consoledev,$baudrate "\
+  "quiet $diagargs && "		\
+  "sf probe 0 && sf read $loadaddr $diag_start ${diag_sz.b} && bootm $loadaddr\0"
+
+#define	CONFIG_EXTRA_ENV_SETTINGS	\
+ CONFIG_PLATFORM_ENV			\
+ CONFIG_ONIE_COMMON_UBOOT_ENV
+
+#endif /* __HURRICANE2_H */
diff --git a/include/configs/iproc_common_configs.h b/include/configs/iproc_common_configs.h
index 1e9dca8..f46ee87 100644
--- a/include/configs/iproc_common_configs.h
+++ b/include/configs/iproc_common_configs.h
@@ -6,9 +6,9 @@
 #define CONFIG_SYS_NS16550_SERIAL
 #define CONFIG_CONS_INDEX					1
 #if defined(CONFIG_HURRICANE2) && !defined(CONFIG_HURRICANE2_EMULATION)
-#define CONFIG_SYS_NS16550_COM1			(0x18000400) /* CCA UART 1 */
+#define CONFIG_SYS_NS16550_COM1			(0x18000300) /* CCA UART 1 */
 #else
-#define CONFIG_SYS_NS16550_COM1			(0x18000300) /* CCA UART 0 */
+#define CONFIG_SYS_NS16550_COM1			(0x18000400) /* CCA UART 0 */
 #endif
 #define CONFIG_SYS_NS16550_REG_SIZE		(1)	/* no padding */
 #define CONFIG_SYS_NS16550_CLK			iproc_get_uart_clk(0)
@@ -17,38 +17,7 @@
 #else
 #define CONFIG_BAUDRATE					115200
 #endif
-#define CONFIG_SYS_BAUDRATE_TABLE	{9600, 19200, 38400, 57600, 115200} 
 
-#define CONFIG_STANDALONE_LOAD_ADDR 0x61000000
-
-#define CONFIG_BOOTFILE         "uImage"
 #define CONFIG_MACH_TYPE        4735
-#define CONFIG_BOOTARGS     				"console=ttyS0,115200n8 maxcpus=1 mem=496M"
-
-#define CONFIG_BOOTDELAY			3	/* User can hit a key to abort kernel boot and stay in uboot cmdline */
-#define CONFIG_BOOTCOMMAND 				""	/* UBoot command issued on power up */
-#define CONFIG_SYS_PROMPT					"u-boot> "  
-
-#define CONFIG_CMD_SAVEENV
-
-#define CONFIG_INITRD_TAG        1       /*  send initrd params           */
-#define CONFIG_CMD_CONSOLE
-#define CONFIG_CMD_NET
-#define CONFIG_CMD_PING
-#define CONFIG_CMD_MEMORY
-#define CONFIG_CMD_RUN
-#define CONFIG_CMD_MTDPARTS
-#define CONFIG_MTD_DEVICE
-#define MTDIDS_DEFAULT      "nand0=nand_iproc.0"
-#define MTDPARTS_DEFAULT    "mtdparts=mtdparts=nand_iproc.0:1024k(nboot),1024k(nenv),8192k(nsystem),1038336k(ndata)"
-#define CONFIG_SYS_HUSH_PARSER
-#define CONFIG_CMD_DHCP
-#define CONFIG_CMD_BOOT
-#define CONFIG_CMD_LICENSE
-#define CONFIG_CMD_ECHO
-#define CONFIG_CMD_ITEST
-#define CONFIG_CMD_MISC
-#define CONFIG_CMD_SOURCE
-
 
 #endif /* _IPROC_COMMON_H_ */
diff --git a/include/configs/onie_common_config.h b/include/configs/onie_common_config.h
index c941e2a..46436d3 100644
--- a/include/configs/onie_common_config.h
+++ b/include/configs/onie_common_config.h
@@ -87,7 +87,7 @@
 	"onie_update=setenv onie_boot_reason update && boot\0" \
 	"onie_uninstall=setenv onie_boot_reason uninstall && boot\0"
 
-#define CONFIG_BOOTCOMMAND	"run check_boot_reason; run nos_bootcmd; run onie_bootcmd"
+#define CONFIG_BOOTCOMMAND	"run boot_diag; run check_boot_reason; run nos_bootcmd; run onie_bootcmd"
 
 /*
  * Common environemnt variables.
