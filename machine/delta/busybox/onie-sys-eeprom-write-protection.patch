diff -Nura a/include/onie_tlvinfo.h b/include/onie_tlvinfo.h
--- a/include/onie_tlvinfo.h	2017-03-14 17:35:20.478445938 +0800
+++ b/include/onie_tlvinfo.h	2017-03-14 17:38:20.971360852 +0800
@@ -19,7 +19,7 @@
 //typedef unsigned char bool;
 
 #define min(x, y)          ((x) > (y) ? (y) : (x))
-
+#define REBOOT_VALUE_FILE	"/tmp/reboot_value.txt"
 /*
  * Tlvinf header: Layout of the header for the TlvInfo format
  *
diff -Nura a/miscutils/sys_eeprom.c b/miscutils/sys_eeprom.c
--- a/miscutils/sys_eeprom.c	2017-03-14 13:57:11.217867268 +0800
+++ b/miscutils/sys_eeprom.c	2017-03-14 17:58:41.093601169 +0800
@@ -1,4 +1,7 @@
 #include "libbb.h"
+#include "stdio.h"
+#include "stdlib.h"
+#include "string.h"
 #include "onie_tlvinfo.h"
 #include <getopt.h>
 
@@ -40,6 +43,37 @@
     exit(1);
 }
 
+
+/*
+ *  This macro defines the reboot value.
+ */
+static void reboot_value_set()
+{
+    FILE *fPtr;
+    char cmd[64] = {0};
+    char reboot_value[16] = {0};
+
+    fPtr = fopen(REBOOT_VALUE_FILE, "r");
+    if (!fPtr) {
+        printf("Fail to open reboot_value.txt!");
+        exit(1);
+    }
+    fscanf(fPtr, "%s", reboot_value);
+    fclose(fPtr);
+    system("i2cset -y 1 0x71 0x08 0x08 > /dev/null 2>&1");
+    sprintf(cmd, "i2cset -y 1 0x31 0x10 %s > /dev/null 2>&1", reboot_value);
+    system(cmd); /* Rewrite the reboot value */
+}
+
+/*
+ *  This macro defines the eeprom write diabled.
+ */
+static void eeprom_write_protect_enabled()
+{
+    system("i2cset -y 1 0x71 0x08 0x08 > /dev/null 2>&1");
+    system("i2cset -y 1 0x31 0x10 0x01 > /dev/null 2>&1");
+}
+
 /*
  *  do_onie_syseeprom
  *  This function implements the onie_syseeprom command.
@@ -53,6 +87,7 @@
     char *value, *subopts, *tname;
     int index, c, i, option_index, tcode;
     char tlv_value[TLV_DECODE_VALUE_MAX_LEN];
+    char reboot_value_cmd[64] = {0};
 
     const size_t tlv_code_count = sizeof(tlv_code_list) /
 	sizeof(tlv_code_list[0]);
@@ -74,6 +109,16 @@
     }
     tokens[tlv_code_count] = NULL;
 
+	/* Save the reboot value to reboot_value.txt */
+	system("i2cset -y 1 0x71 0x08 0x08 > /dev/null 2>&1");
+	sprintf(reboot_value_cmd, "i2cget -y 1 0x31 0x10 > %s", REBOOT_VALUE_FILE);
+	system(reboot_value_cmd); 
+	
+	/* disable the eeprom write protect via CPLD */
+	system("i2cset -y 1 0x71 0x08 0x08 > /dev/null 2>&1");
+	system("i2cset -y 1 0x31 0x10 0x00 > /dev/null 2>&1");
+
+
     while (TRUE) {
 	c = getopt_long(argc, argv, short_options,
 			long_options, &option_index);
@@ -84,6 +129,7 @@
 	switch (c) {
 	case 'h':
 	    cmd_usage();
+        reboot_value_set();
 	    break;
 
 	case 'l':
@@ -149,6 +195,7 @@
 	break;
 
 	default:
+        reboot_value_set();
 	    cmd_usage();
             err = 1;
 	    break;
@@ -156,6 +203,7 @@
     }
     if (!count) {
 	if (argc > 1) {
+        reboot_value_set();
 	    cmd_usage();
             err = 1;
 	} else {
@@ -177,5 +225,7 @@
     for (i = 0; i < tlv_code_count; i++) {
 	free(tokens[i]);
     }
+    eeprom_write_protect_enabled();
+    reboot_value_set();
     return  (err == 0) ? 0 : 1;
 }
