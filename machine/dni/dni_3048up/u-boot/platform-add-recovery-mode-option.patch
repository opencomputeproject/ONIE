Add Recovery Mode Option

Add CONFIG_DNI_3048UP_RECOVERY option to generate a u-boot image that
can be loaded into RAM and executed by a JTAG debugger.

diff --git a/arch/arm/cpu/armv7/iproc/ddr_init.c b/arch/arm/cpu/armv7/iproc/ddr_init.c
index 2c88abd..00a9220 100755
--- a/arch/arm/cpu/armv7/iproc/ddr_init.c
+++ b/arch/arm/cpu/armv7/iproc/ddr_init.c
@@ -1627,8 +1627,1441 @@ DDR_PHY_ECC_LANE_WR_PREAMBLE_MODE_BASE,
 };
 #endif
 
+#if defined(CONFIG_DNI_3048UP_RECOVERY)
+static const uint32_t dni_3448_shmoo_default[] = {
+0x4F4D4853,
+0x0000DC14,
+0x626F0C81,
+0x69CA13E7,
+0x000000AF,
+0x18010830,
+0x00000000,
+0x18010834,
+0x00010028,
+0x1801086C,
+0x00000820,
+0x18010A00,
+0x00010016,
+0x18010A04,
+0x00010000,
+0x18010A08,
+0x0001001C,
+0x18010A0C,
+0x0001001C,
+0x18010A10,
+0x00010019,
+0x18010A14,
+0x00010019,
+0x18010A18,
+0x00010019,
+0x18010A1C,
+0x00010019,
+0x18010A20,
+0x00010019,
+0x18010A24,
+0x00010019,
+0x18010A28,
+0x00010019,
+0x18010A2C,
+0x00010019,
+0x18010A30,
+0x00000000,
+0x18010A34,
+0x0001000C,
+0x18010A38,
+0x0001000C,
+0x18010A3C,
+0x0001000C,
+0x18010A40,
+0x0001000C,
+0x18010A44,
+0x0001000C,
+0x18010A48,
+0x0001000C,
+0x18010A4C,
+0x0001000C,
+0x18010A50,
+0x0001000C,
+0x18010A54,
+0x0001000C,
+0x18010A58,
+0x0001000C,
+0x18010A5C,
+0x0001000C,
+0x18010A60,
+0x0001000C,
+0x18010A64,
+0x0001000C,
+0x18010A68,
+0x0001000C,
+0x18010A6C,
+0x0001000C,
+0x18010A70,
+0x0001000C,
+0x18010A74,
+0x00010019,
+0x18010AA4,
+0x00010000,
+0x18010AA8,
+0x0001001B,
+0x18010AAC,
+0x0001001B,
+0x18010AB0,
+0x00010019,
+0x18010AB4,
+0x00010019,
+0x18010AB8,
+0x00010019,
+0x18010ABC,
+0x00010019,
+0x18010AC0,
+0x00010019,
+0x18010AC4,
+0x00010019,
+0x18010AC8,
+0x00010019,
+0x18010ACC,
+0x00010019,
+0x18010AD0,
+0x00000000,
+0x18010AD4,
+0x0001000B,
+0x18010AD8,
+0x0001000B,
+0x18010ADC,
+0x0001000B,
+0x18010AE0,
+0x0001000B,
+0x18010AE4,
+0x0001000B,
+0x18010AE8,
+0x0001000B,
+0x18010AEC,
+0x0001000B,
+0x18010AF0,
+0x0001000B,
+0x18010AF4,
+0x0001000B,
+0x18010AF8,
+0x0001000B,
+0x18010AFC,
+0x0001000B,
+0x18010B00,
+0x0001000B,
+0x18010B04,
+0x0001000B,
+0x18010B08,
+0x0001000B,
+0x18010B0C,
+0x0001000B,
+0x18010B10,
+0x0001000B,
+0x18010B14,
+0x00010014,
+0x18010B18,
+0x00000000,
+0x18010B1C,
+0x00000000,
+0x18010B20,
+0x00000000,
+0x18010B24,
+0x00000000,
+0x18010B28,
+0x00000000,
+0x18010B2C,
+0x00000000,
+0x18010B30,
+0x00000000,
+0x18010B34,
+0x00000000,
+0x18010B38,
+0x00000000,
+0x18010B3C,
+0x00000000,
+0x18010B40,
+0x00000000,
+0x18010B44,
+0x00000000,
+0x18010B48,
+0x00000000,
+0x18010B4C,
+0x00000000,
+0x18010B50,
+0x00000000,
+0x18010B54,
+0x00000000,
+0x18010B58,
+0x00000000,
+0x18010B5C,
+0x00000000,
+0x18010B60,
+0x00000004,
+0x18010B64,
+0x00000007,
+0x18010B68,
+0x00000000,
+0x18010B6C,
+0x00000000,
+0x18010BA0,
+0x00500000,
+0x18010BA4,
+0x0000000A,
+0x18010BA8,
+0x00000000,
+0x18010BAC,
+0x00000003,
+0x18010BB0,
+0x00000000,
+0x18010C00,
+0x0001001D,
+0x18010C04,
+0x00010000,
+0x18010C08,
+0x0001001C,
+0x18010C0C,
+0x0001001C,
+0x18010C10,
+0x00010018,
+0x18010C14,
+0x00010018,
+0x18010C18,
+0x00010018,
+0x18010C1C,
+0x00010018,
+0x18010C20,
+0x00010018,
+0x18010C24,
+0x00010018,
+0x18010C28,
+0x00010018,
+0x18010C2C,
+0x00010018,
+0x18010C30,
+0x00000000,
+0x18010C34,
+0x0001000C,
+0x18010C38,
+0x0001000C,
+0x18010C3C,
+0x0001000C,
+0x18010C40,
+0x0001000C,
+0x18010C44,
+0x0001000C,
+0x18010C48,
+0x0001000C,
+0x18010C4C,
+0x0001000C,
+0x18010C50,
+0x0001000C,
+0x18010C54,
+0x0001000C,
+0x18010C58,
+0x0001000C,
+0x18010C5C,
+0x0001000C,
+0x18010C60,
+0x0001000C,
+0x18010C64,
+0x0001000C,
+0x18010C68,
+0x0001000C,
+0x18010C6C,
+0x0001000C,
+0x18010C70,
+0x0001000C,
+0x18010C74,
+0x0001001E,
+0x18010CA4,
+0x00010000,
+0x18010CA8,
+0x0001001B,
+0x18010CAC,
+0x0001001B,
+0x18010CB0,
+0x00010018,
+0x18010CB4,
+0x00010018,
+0x18010CB8,
+0x00010018,
+0x18010CBC,
+0x00010018,
+0x18010CC0,
+0x00010018,
+0x18010CC4,
+0x00010018,
+0x18010CC8,
+0x00010018,
+0x18010CCC,
+0x00010018,
+0x18010CD0,
+0x00000000,
+0x18010CD4,
+0x00010009,
+0x18010CD8,
+0x00010009,
+0x18010CDC,
+0x00010009,
+0x18010CE0,
+0x00010009,
+0x18010CE4,
+0x00010009,
+0x18010CE8,
+0x00010009,
+0x18010CEC,
+0x00010009,
+0x18010CF0,
+0x00010009,
+0x18010CF4,
+0x00010009,
+0x18010CF8,
+0x00010009,
+0x18010CFC,
+0x00010009,
+0x18010D00,
+0x00010009,
+0x18010D04,
+0x00010009,
+0x18010D08,
+0x00010009,
+0x18010D0C,
+0x00010009,
+0x18010D10,
+0x00010009,
+0x18010D14,
+0x0001001D,
+0x18010D18,
+0x00000000,
+0x18010D1C,
+0x00000000,
+0x18010D20,
+0x00000000,
+0x18010D24,
+0x00000000,
+0x18010D28,
+0x00000000,
+0x18010D2C,
+0x00000000,
+0x18010D30,
+0x00000000,
+0x18010D34,
+0x00000000,
+0x18010D38,
+0x00000000,
+0x18010D3C,
+0x00000000,
+0x18010D40,
+0x00000000,
+0x18010D44,
+0x00000000,
+0x18010D48,
+0x00000000,
+0x18010D4C,
+0x00000000,
+0x18010D50,
+0x00000000,
+0x18010D54,
+0x00000000,
+0x18010D58,
+0x00000000,
+0x18010D5C,
+0x00000000,
+0x18010D60,
+0x00000004,
+0x18010D64,
+0x00000007,
+0x18010D68,
+0x00000000,
+0x18010D6C,
+0x00000000,
+0x18010DA0,
+0x00500000,
+0x18010DA4,
+0x0000000A,
+0x18010DA8,
+0x00000000,
+0x18010DAC,
+0x00000003,
+0x18010DB0,
+0x00000000,
+0x00000121,
+0x9FFC1848,
+0x9FFC1848,
+0x696E6F20,
+0x6F625F65,
+0x7261746F,
+0x62207367,
+0x5F746F6F,
+0x73616572,
+0x243D6E6F,
+0x65696E6F,
+0x6F6F625F,
+0x65725F74,
+0x6E6F7361,
+0x7572203B,
+0x6E6F206E,
+0x625F6569,
+0x63746F6F,
+0x203B646D,
+0x003B6966,
+0x65696E6F,
+0x73616C66,
+0x64646168,
+0x78300072,
+0x37313030,
+0x30303030,
+0x6C707500,
+0x696E6F64,
+0x66740065,
+0x24207074,
+0x64616F6C,
+0x72646461,
+0x65732420,
+0x72657672,
+0x243A7069,
+0x65696E6F,
+0x656C6966,
+0x2066693B,
+0x74736574,
+0x203F2420,
+0x20656E2D,
+0x74203B30,
+0x206E6568,
+0x6F686365,
+0x69614620,
+0x2164656C,
+0x7865203B,
+0x203B7469,
+0x733B6966,
+0x72702066,
+0x2065626F,
+0x66733B30,
+0x61726520,
+0x24206573,
+0x65696E6F,
+0x73616C66,
+0x64646168,
+0x78302072,
+0x39653030,
+0x30303030,
+0x2066733B,
+0x74697277,
+0x6C242065,
+0x6164616F,
+0x20726464,
+0x696E6F24,
+0x616C6665,
+0x64616873,
+0x24207264,
+0x656C6966,
+0x657A6973,
+0x00000120,
+0x00000F98,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000001,
+0x9FF62BE0,
+0x9FF62BF0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000016,
+0x9FF62EC8,
+0x9FF62EE0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000002A,
+0x9FF62B58,
+0x9FF62B68,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000002F,
+0x9FF62C60,
+0x9FF62C70,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000036,
+0x9FF62FC0,
+0x9FF62FD0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000111,
+0x9FF62C00,
+0x9FF62C10,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000046,
+0x9FF62FF8,
+0x9FF63008,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000060,
+0x9FF631C0,
+0x9FF631D0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000062,
+0x9FF62D18,
+0x9FF62D30,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000065,
+0x9FF628E8,
+0x9FF628F8,
+0x00000066,
+0x9FF62880,
+0x9FF62890,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000006B,
+0x9FF610A8,
+0x9FF610B8,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000070,
+0x9FF62DC8,
+0x9FF62DE0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000074,
+0x9FF63198,
+0x9FF631B0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000089,
+0x9FF62A50,
+0x9FF62A60,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000A0,
+0x9FF62B80,
+0x9FF62B90,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000A2,
+0x9FF62CE8,
+0x9FF62D00,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000A2,
+0x9FF62F40,
+0x9FF62F58,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000A0,
+0x9FF62C20,
+0x9FF62C30,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000B1,
+0x9FF628C8,
+0x9FF628D8,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000B8,
+0x9FF628A8,
+0x9FF628B8,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000BD,
+0x9FF62E40,
+0x9FF62E50,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000C6,
+0x9FF62D40,
+0x9FF62D50,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000CF,
+0x9FF62E00,
+0x9FF62E10,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000D3,
+0x9FF62A70,
+0x9FF62A88,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000E0,
+0x9FF62C40,
+0x9FF62C50,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000E3,
+0x9FF62910,
+0x9FF62920,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000E5,
+0x9FF62840,
+0x9FF62850,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000062,
+0x9FF62D60,
+0x9FF62D78,
+0x000000E8,
+0x9FF63018,
+0x9FF63030,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000ED,
+0x9FF62A98,
+0x9FF62AA8,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x000000F5,
+0x9FF62930,
+0x9FF62940,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000106,
+0x9FF62820,
+0x9FF62830,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000109,
+0x9FF629C8,
+0x9FF629D8,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000010F,
+0x9FF62860,
+0x9FF62870,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000111,
+0x9FF62BA0,
+0x9FF62BB0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000113,
+0x9FF61080,
+0x9FF61090,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000002F,
+0x9FF62D88,
+0x9FF62DB0,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000011C,
+0x9FF63108,
+0x9FF63120,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x0000012B,
+0x9FF627D0,
+0x9FF627E0,
+0x0000012C,
+0x9FF62E80,
+0x9FF62E98,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000135,
+0x9FF62950,
+0x9FF62960,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000146,
+0x9FF62CC0,
+0x9FF62CD8,
+0x00000147,
+0x9FF62C80,
+0x9FF62C98,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000000,
+0x00000106,
+0x9FF62BC0,
+};
+
+static int write_shmoo_to_flash(uint32_t *buf, int length)
+{
     /* Dump data to UART for capture */
-#if defined(CONFIG_IPROC_NAND) && defined(CONFIG_ENV_IS_IN_NAND) && CONFIG_ENV_IS_IN_NAND
+    while (length--) {
+        printf("0x%08X,\n",*buf++);
+    }
+
+    return 0;
+}
+    /* Dump data to UART for capture */
+#elif defined(CONFIG_IPROC_NAND) && defined(CONFIG_ENV_IS_IN_NAND) && CONFIG_ENV_IS_IN_NAND
 
 static int write_shmoo_to_flash(void *buf, int length)
 {
@@ -1819,7 +3252,10 @@ static volatile uint32_t *validate_flash_shmoo_values(struct shmoo_signature *ps
         *ppairs = pairs;
     }
     
-#if defined(CONFIG_ENV_IS_IN_NAND) && CONFIG_ENV_IS_IN_NAND
+#if defined(CONFIG_DNI_3048UP_RECOVERY)
+    flptr = (volatile uint32_t *)dni_3448_shmoo_default;
+    offset = 0;
+#elif defined(CONFIG_ENV_IS_IN_NAND) && CONFIG_ENV_IS_IN_NAND
     /* Read SHMOO data from NAND */
     flptr = (volatile uint32_t *)(IPROC_NAND_MEM_BASE + CONFIG_SHMOO_REUSE_NAND_OFFSET);
     offset = (CONFIG_SHMOO_REUSE_NAND_RANGE - 1) / SHMOO_MIN_BLOCK_SIZE * SHMOO_MIN_BLOCK_SIZE;
@@ -2025,6 +3461,9 @@ void iproc_save_shmoo_values(void)
         printf("Error allocating memory for saving Shmoo values!\n");
         return;
     }
+#if defined(CONFIG_DNI_3048UP_RECOVERY)
+    printf("%s: length=%d, address=0x%08X\n", __func__, length, buffer);
+#endif
     ptr = buffer;
 
     /* Fill signature */
@@ -2774,7 +4213,9 @@ int ddr_init2(void)
   {  /* this statement is to reduce compile error */
   }
 #else
+#if !defined(CONFIG_DNI_3048UP_RECOVERY)
   while(!(reg32_read((volatile uint32_t *)DDR_DENALI_CTL_89) & 0x100));
+#endif
 #if defined(IPROC_DDR_INIT2_DEBUG)
 	printf("ddr_init2: MemC initialization complete\n");
 #endif
diff --git a/arch/arm/include/asm/iproc/ddr_bist.h b/arch/arm/include/asm/iproc/ddr_bist.h
index f5c1183..55617e9 100755
--- a/arch/arm/include/asm/iproc/ddr_bist.h
+++ b/arch/arm/include/asm/iproc/ddr_bist.h
@@ -17,8 +17,13 @@ extern uint32_t iproc_get_ddr3_clock_mhz(uint32_t unit);
 #define SOC_DDR3_CLOCK_MHZ(unit)	iproc_get_ddr3_clock_mhz(unit)
 
 #if (defined(CONFIG_HELIX4) || defined(CONFIG_KATANA2))
-#define DDR_SHMOO_PARAM_MEM_PTR		(0x1b040000) /*size ~0x300 */
-#define DDR_SHMOO_VREFW_MEM_PTR		(0x1b041000) /* size ~0x30000 */
+#  if defined(CONFIG_DNI_3048UP_RECOVERY)
+#    define DDR_SHMOO_PARAM_MEM_PTR     (0x1b05B000) /* use top of internal SRAM */
+#    define DDR_SHMOO_VREFW_MEM_PTR     (0x1b05C000)
+#  else
+#    define DDR_SHMOO_PARAM_MEM_PTR		(0x1b040000) /*size ~0x300 */
+#    define DDR_SHMOO_VREFW_MEM_PTR		(0x1b041000) /* size ~0x30000 */
+#  endif
 #elif defined(CONFIG_HURRICANE2)
 #define DDR_SHMOO_PARAM_MEM_PTR		(0x1b000000)
 #define DDR_SHMOO_VREFW_MEM_PTR		(0x50000000)
diff --git a/board/broadcom/dni_3048up/config.mk b/board/broadcom/dni_3048up/config.mk
index 98845cc..295b662 100644
--- a/board/broadcom/dni_3048up/config.mk
+++ b/board/broadcom/dni_3048up/config.mk
@@ -8,6 +8,10 @@ ifdef CONFIG_IPROC_SPL
 CONFIG_SYS_TEXT_BASE = 0x80000000
 endif
 
+ifdef CONFIG_DNI_3048UP_RECOVERY
+CONFIG_SYS_TEXT_BASE = 0x1B008000
+endif
+
 ifdef CONFIG_NO_CODE_RELOC
 ifdef CONFIG_SYS_BIG_ENDIAN
 LDSCRIPT := $(SRCTREE)/board/$(BOARDDIR)/u-boot-nr-be.lds
diff --git a/board/broadcom/dni_3048up/dni_3048up.c b/board/broadcom/dni_3048up/dni_3048up.c
index 33c2e70..b9042ea 100644
--- a/board/broadcom/dni_3048up/dni_3048up.c
+++ b/board/broadcom/dni_3048up/dni_3048up.c
@@ -346,7 +346,9 @@ int board_late_init (void)
     buffer = (buffer&0xfc);  /* turn off bits 1:0 */
     i2c_write(0x28, 0x0a, 1, &buffer, 1);
 	
+#ifdef CONFIG_CMD_USB
 	linux_usbh_init();
+#endif
 
 #if 0
 #ifdef CONFIG_POPULATE_SERIAL_NUMBER
diff --git a/board/broadcom/dni_3048up/usb.c b/board/broadcom/dni_3048up/usb.c
index c1f6d26..fe0126d 100644
--- a/board/broadcom/dni_3048up/usb.c
+++ b/board/broadcom/dni_3048up/usb.c
@@ -19,6 +19,9 @@
  */
 
 #include <common.h>
+
+#ifdef CONFIG_CMD_USB
+
 #include <command.h>
 #include <environment.h>
 #include <usb.h>
@@ -76,3 +79,5 @@ U_BOOT_CMD(
 	"environment variable 'usbdev' to that number.",
 	""
 );
+
+#endif
diff --git a/drivers/serial/serial.c b/drivers/serial/serial.c
index ea55bfd..7747477 100644
--- a/drivers/serial/serial.c
+++ b/drivers/serial/serial.c
@@ -550,6 +550,9 @@ int find_str_indx(char *s, size_t len, char *t)
  */
 int early_access_env_vars(void)
 {
+#if defined(CONFIG_DNI_3048UP_RECOVERY)
+	return -1;
+#endif
     volatile uint8_t *env_ptr;
     int i;
     char buf[EARLY_ACC_BUF_SIZE];
diff --git a/include/configs/DNI_3048UP.h b/include/configs/DNI_3048UP.h
index ea2bbf9..668e59a 100755
--- a/include/configs/DNI_3048UP.h
+++ b/include/configs/DNI_3048UP.h
@@ -10,9 +10,9 @@
 #define CONFIG_POPULATE_SERIAL_NUMBER
 
 #define CONFIG_CMD_LOADB
-#define CONFIG_YAFFS2
 
 #include "common_config.h"
+
 #undef CONFIG_CMD_JFFS2
 /*#undef CONFIG_OF_BOARD_SETUP*/
 #undef CONFIG_CMD_IRQ
@@ -20,9 +20,47 @@
 /*#undef CONFIG_OF_LIBFDT */
 /*#undef CONFIG_ENV_WRITE_DEFAULT_IF_CRC_BAD*/
 
-#define CONFIG_CMD_GPT
-#define CONFIG_PARTITION_UUIDS
-#define CONFIG_EFI_PARTITION
+/* Enable CONFIG_DNI_3048UP_RECOVERY for recovery u-boot image */
+/* #define CONFIG_DNI_3048UP_RECOVERY */
+#ifdef CONFIG_DNI_3048UP_RECOVERY
+/*
+ * Unconfigure things to get the image size down, as we need to fit
+ * into the SRAM.
+ */
+#  undef CONFIG_ENV_WRITE_DEFAULT_IF_CRC_BAD
+#  undef CONFIG_IPROC_SPL
+#  undef CONFIG_YAFFS2
+#  undef CONFIG_CMD_ASKENV	/* ask for env variable		*/
+#  undef CONFIG_CMD_BDI		/* bdinfo			*/
+#  undef CONFIG_CMD_CONSOLE	/* coninfo			*/
+#  undef CONFIG_CMD_DATE	/* support for RTC, date/time...*/
+#  undef CONFIG_CMD_DHCP	/* DHCP Support			*/
+#  undef CONFIG_CMD_DIAG	/* Diagnostics			*/
+#  undef CONFIG_CMD_EDITENV	/* editenv			*/
+#  undef CONFIG_CMD_EXT2	/* EXT2 Support			*/
+#  undef CONFIG_CMD_FAT		/* FAT support			*/
+#  undef CONFIG_CMD_IMI		/* iminfo			*/
+#  undef CONFIG_CMD_IRQ		/* irqinfo			*/
+#  undef CONFIG_CMD_ITEST	/* Integer (and string) test	*/
+#  undef CONFIG_CMD_JFFS2	/* JFFS2 Support		*/
+#  undef CONFIG_CMD_MII		/* MII support			*/
+#  undef CONFIG_CMD_MISC	/* Misc functions like sleep etc*/
+#  undef CONFIG_CMD_PCI		/* pciinfo			*/
+#  undef CONFIG_CMD_PING	/* ping support			*/
+#  undef CONFIG_CMD_SAVEENV	/* saveenv			*/
+#  undef CONFIG_CMD_SETEXPR	/* setexpr support		*/
+#  undef CONFIG_CMD_SETGETDCR	/* DCR support on 4xx		*/
+#  undef CONFIG_CMD_SDRAM	/* SDRAM DIMM SPD info printout */
+#  undef CONFIG_CMD_SOURCE	/* "source" command support	*/
+#  undef CONFIG_CMD_XIMG	/* Load part of Multi Image	*/
+#  undef CONFIG_CMD_USB
+
+#else
+
+#define CONFIG_CMD_USB
+#undef CONFIG_ENV_IS_NOWHERE
+
+#define CONFIG_YAFFS2
 
 #define CONFIG_RBTREE
 #define CONFIG_LZO
@@ -31,7 +69,12 @@
 #define CONFIG_CMD_UBI
 #define CONFIG_CMD_UBIFS
 
-#define CONFIG_CMD_USB
+#define CONFIG_CMD_GPT
+#define CONFIG_PARTITION_UUIDS
+#define CONFIG_EFI_PARTITION
+
+#endif  /* CONFIG_DNI_3048UP_RECOVERY */
+
 #ifdef CONFIG_CMD_USB
 #define CONFIG_USB_EHCI
 #define CONFIG_USB_EHCI_IPROC
@@ -135,10 +178,14 @@ When DEBUG is enabled, need to disable both CACHE to make u-boot running
 /* Memory Info */
 #if (defined(CONFIG_L2C_AS_RAM ) && defined(CONFIG_NO_CODE_RELOC))
 #define CONFIG_SYS_MALLOC_LEN 			0x8000  	/* see armv7/start.S. */
+#define CONFIG_STACKSIZE				(0x10000) //64K
+#elif defined(CONFIG_DNI_3048UP_RECOVERY)
+#define CONFIG_SYS_MALLOC_LEN           (0x3000) //16K
+#define CONFIG_STACKSIZE				(0x3000) //16K
 #else
 #define CONFIG_SYS_MALLOC_LEN 			0x1000000  	/* see armv7/start.S. */
-#endif
 #define CONFIG_STACKSIZE				(0x10000) //64K
+#endif
 #define CONFIG_STACKSIZE_IRQ			(4096)
 #define CONFIG_STACKSIZE_FIQ			(4096)
 
@@ -158,7 +205,11 @@ When DEBUG is enabled, need to disable both CACHE to make u-boot running
 
 #define CONFIG_SYS_SDRAM_BASE		(CONFIG_PHYS_SDRAM_1 + CONFIG_PHYS_SDRAM_RSVD_SIZE)
 /* CONFIG_SYS_TEXT_BASE is where u-boot is loaded by boot1 */
+#if defined(CONFIG_DNI_3048UP_RECOVERY)
+#define CONFIG_SYS_STACK_SIZE		(0x00004000) /* 16K */
+#else
 #define CONFIG_SYS_STACK_SIZE		(0x00010000) /* 64K */      
+#endif
 #define CONFIG_SYS_INIT_SP_ADDR		(CONFIG_PHYS_SDRAM_0 + CONFIG_SYS_STACK_SIZE - 16)
 
 /* Clocks */
@@ -258,9 +309,11 @@ When DEBUG is enabled, need to disable both CACHE to make u-boot running
 #define CONFIG_SF_DEFAULT_MODE                  SPI_MODE_3
 
 /* Environment variables */
+#if !defined(CONFIG_DNI_3048UP_RECOVERY)
 #undef CONFIG_ENV_IS_NOWHERE
-
 #define CONFIG_ENV_IS_IN_SPI_FLASH              1
+#endif
+
 #define CONFIG_ENV_ADDR                         0x1e100000
 #define CONFIG_ENV_OFFSET                       0x100000
 #define CONFIG_ENV_SPI_MAX_HZ                   10000000
@@ -350,5 +403,4 @@ When DEBUG is enabled, need to disable both CACHE to make u-boot running
 	CONFIG_ONIE_COMMON_UBOOT_ENV  \
 	CONFIG_ONIE_UPGRADE_SETTINGS
 
-
 #endif /* __DNI_34XX_H */
