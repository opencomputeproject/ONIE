# Plexxi ONIE installer configuration

description="Plexxi x86_64"

# This is sourced by installer/x86_64/install-arch

# Default ONIE block device
install_device_platform()
{
    echo /dev/sda
}

onie_boot_size_platform()
{
    # if disk is 16G or larger then boot size is 4G else it is 1G
    # use 12G as the cutoff though
    info="$(parted -s -m $onie_dev unit b print | head -n 2 | tail -1 | cut -d \: -f 2 | sed -e s/B//)"
    if [ $info -gt $((12 * 1024 * 1024 * 1024)) ]; then
        part_size=$(( 4 * 1024 * $sectors_per_mb  ))
    else
        part_size=$(( 1 * 1024 * $sectors_per_mb  ))
    fi
    echo $part_size
}


umount_and_verify_platform()
{
    if [ ! -e $onie_boot_mnt/grub/grub.cfg.onie ]; then
        # umount ONIE-BOOT if mounted
        umount $(onie_get_boot_dev) > /dev/null 2>&1
        eval $verify_partitions || {
            echo "ERROR: Partitions on target device do not look right: $onie_dev"
            echo "ERROR: Recommend re-embedding ONIE instead of updating."
            exit 1
        }
    else
        # Plexxi stuff
        # check the size of boot dir
        bootDirSize=`df $onie_boot_mnt | tail -n 1 | awk '{print $5}' | sed 's/%//'`
        echo "Boot partition is $bootDirSize percent full"
        umount $(onie_get_boot_dev) > /dev/null 2>&1
        if [ $bootDirSize -gt 90 ]; then
            echo "ERROR: Partition on target device seems too full"
            echo "ERROR: Recommend removing files first or re-embedding ONIE instead of updating."
            exit 1
        fi
    fi
}


preserve_grub_env_platform()
{
    if [ "$onie_boot_reason" != "embed" ] ; then
        if mount -o defaults,rw -t $onie_boot_fs_type $onie_boot_dev $onie_boot_mnt > /dev/null 2>&1 ; then
            if [ -r $grub_env_file ] ; then
                preserve_grubenv=yes
                # copy the whole boot partition - preserve plexxi content
                if [ -e $onie_boot_mnt/grub/grub.cfg.onie ]; then
                    mkdir /tmp/BOOT_SAVE
                    cp -aR $onie_boot_mnt/* /tmp/BOOT_SAVE
                else
                    cp $grub_env_file /tmp/grubenv
                fi
            fi
            umount $onie_boot_mnt > /dev/null 2>&1
        fi
    fi
}


restore_grub_env_platform()
{
    # copy the whole boot partition back (except for onie and grub dir)
    if [ -e /tmp/BOOT_SAVE/grub/grub.cfg.onie ]; then
        mv $grub_root_dir/grub.cfg  $grub_root_dir/grub.cfg.onie
        for file in grub.cfg grubenv platform; do
            if [ -e /tmp/BOOT_SAVE/grub/$file ]; then
                cp /tmp/BOOT_SAVE/grub/$file $grub_root_dir/
            fi
        done
        rm -rf /tmp/BOOT_SAVE/grub/
        rm -rf /tmp/BOOT_SAVE/onie/

        cp -aR  /tmp/BOOT_SAVE/* $onie_boot_mnt
    else
        cp /tmp/grubenv $grub_env_file
    fi
}

# Local Variables:
# mode: shell-script
# eval: (sh-set-shell "/bin/sh" t nil)
# End:
