feature fdt environment size patch

Copyright (C) 2013 Curt Brune <curt@cumulusnetworks.com>

SPDX-License-Identifier:     GPL-2.0

When fixing up the device tree before booting store CONFIG_ENV_SIZE in
the device tree.

First find the FDT node with a property called "label" whose value is
"uboot-env".

If the node is found then set the "env_size" property to
CONFIG_ENV_SIZE.

diff --git a/README b/README
index 1dbcb5f..ad0bcac 100644
--- a/README
+++ b/README
@@ -534,6 +534,19 @@ The following options need to be configured:
 		crash. This is needed for buggy hardware (uc101) where
 		no pull down resistor is connected to the signal IDE5V_DD7.
 
+                CONFIG_FDT_ENV_SIZE
+
+                When fixing up the device tree before booting store
+                the value of the CONFIG_ENV_SIZE macro in the device
+                tree.  This allows the OS to know how the environment
+                area is defined.
+
+                The method first finds the FDT node with a property
+                called "label" whose value is "uboot-env".
+
+                If the node is found then set the "env_size" property to
+                CONFIG_ENV_SIZE.
+
 		CONFIG_MACH_TYPE	[relevant for ARM only][mandatory]
 
 		This setting is mandatory for all boards that have only one
diff --git a/arch/arm/lib/bootm.c b/arch/arm/lib/bootm.c
old mode 100644
new mode 100755
index a9070d5..0387a1d
--- a/arch/arm/lib/bootm.c
+++ b/arch/arm/lib/bootm.c
@@ -262,6 +262,11 @@ static int create_fdt(bootm_headers_t *images)
 	ft_board_setup(*of_flat_tree, gd->bd);
 #endif
 
+#if defined(CONFIG_FDT_ENV_SIZE) && defined(CONFIG_ENV_SIZE)
+		do_fixup_by_prop_u32(*of_flat_tree, "label", "uboot-env", 10,
+				     "env_size", CONFIG_ENV_SIZE, 1);
+#endif
+
 	return 0;
 }
 #endif
diff --git a/arch/powerpc/lib/bootm.c b/arch/powerpc/lib/bootm.c
index 53dc4df..a19e2a4 100644
--- a/arch/powerpc/lib/bootm.c
+++ b/arch/powerpc/lib/bootm.c
@@ -299,6 +299,11 @@ static int boot_body_linux(bootm_headers_t *images)
 		ft_board_setup(*of_flat_tree, gd->bd);
 #endif
 
+#if defined(CONFIG_FDT_ENV_SIZE) && defined(CONFIG_ENV_SIZE)
+		do_fixup_by_prop_u32(*of_flat_tree, "label", "uboot-env", 10,
+				     "env_size", CONFIG_ENV_SIZE, 1);
+#endif
+
 		/* Delete the old LMB reservation */
 		lmb_free(lmb, (phys_addr_t)(u32)*of_flat_tree,
 				(phys_size_t)fdt_totalsize(*of_flat_tree));
