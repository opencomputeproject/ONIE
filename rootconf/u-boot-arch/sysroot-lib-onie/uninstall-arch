# U-Boot specific uninstall routine

#  Copyright (C) 2014,2015 Curt Brune <curt@cumulusnetworks.com>
#
#  SPDX-License-Identifier:     GPL-2.0

erase_mass_storage()
{
    device=$1

    dev_sz=$(blockdev --getsize64 /dev/$device)
    cur_sz=0
    count=0
    n_mb=8
    step=$(( $n_mb * 1024 * 1024 ))
    total=$(( $dev_sz + $step - 1 ))
    total=$(( $total / $step ))
    mb_sz=$(( $dev_sz / ( 1024 * 1024 ) ))
    printf "${log_pre}Erasing internal mass storage device: /dev/$device (${mb_sz}MB)\n"
    if [ "$onie_testing" != "y" ] ; then
        dd if=/dev/urandom of=/tmp/junk.bin bs=1M count=$n_mb > /dev/null 2>&1
        while [ $cur_sz -lt $dev_sz ] ; do
            dd if=/tmp/junk.bin of=/dev/$device bs=$step seek=$count > /dev/null 2>&1
            count=$(( $count + 1 ))
            cur_sz=$(( $step * $count ))
            printf "\r  Percent complete: %02u%%" $(( ($count * 100) / $total ))
        done
        printf "\n"
    fi
    printf "${log_pre}Erase complete.\n"
}

uninstall_system()
{

    # erase open NOR flash region
    if [ -h /dev/mtd-open ] ; then
        printf "${log_pre}Erasing unused NOR flash region\n"
        if [ "$onie_testing" != "y" ] ; then
            flash_unlock /dev/mtd-open > /dev/null 2>&1
            flash_erase /dev/mtd-open 0 0
        fi
    fi

    # erase u-boot env NOR flash region
    # do this even during testing
    if [ -h /dev/mtd-uboot-env ] ; then
        printf "${log_pre}Erasing u-boot environment NOR flash region\n"
        flash_unlock /dev/mtd-uboot-env > /dev/null 2>&1
        flash_erase /dev/mtd-uboot-env 0 0
    fi

    # erase fixed mass storage device
    dt_prop="/proc/device-tree/mass_storage/device"
    if [ -f "$dt_prop" ] ; then
        device=$(cat "$dt_prop")
	erase_mass_storage $device
    fi

    return 0
}

# Local Variables:
# mode: shell-script
# eval: (sh-set-shell "/bin/sh" t nil)
# End:
